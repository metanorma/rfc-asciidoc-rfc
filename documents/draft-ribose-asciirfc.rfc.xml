<?xml version="1.0"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="info" ipr="trust200902" submissionType="independent" xml:lang="en" version="3" >
  <front>
    <title abbrev="AsciiRFC Specifications">AsciiRFC: Authoring Internet-Drafts And RFCs Using AsciiDoc</title>
    <seriesInfo value="" status="Informational" stream="independent" name="Internet-Draft" asciiName="Internet-Draft"></seriesInfo>
    <seriesInfo name="" value="" status="informational"></seriesInfo>
    <author fullname="Ronald Henry Tse">
      <address>
        <postal></postal>
        <email>ronald.tse@ribose.com</email>
        <uri></uri>
      </address>
    </author>
    <author fullname="Nick Nicholas">
      <address>
        <postal></postal>
        <email>nick.nicholas@ribose.com</email>
        <uri></uri>
      </address>
    </author>
    <author fullname="Jeffrey Lau">
      <address>
        <postal></postal>
        <email>jeffrey.lau@ribose.com</email>
        <uri></uri>
      </address>
    </author>
    <author fullname="Paolo Brasolin">
      <address>
        <postal></postal>
        <email>paolo.brasolin@ribose.com</email>
        <uri></uri>
      </address>
    </author>
    <area>Internet</area>
    <abstract anchor="_ee191b37-f633-5420-e633-f988f41ba865">


<t anchor="_55216b45-3e4f-4260-d28e-ad4f668320b8">AsciiDoc is a human readable document markup language which affords
more granular control over markup than comparable schemes such as
Markdown.</t>

<t anchor="_87cfb3a0-472e-4449-5b3e-b79a0a7441d3">The AsciiRFC syntax is designed to allow the author to entirely focus
on text, providing the full power of the resulting RFC XML through the
AsciiDoc language, while abstracting away the need to manually edit
XML, including references.</t>

<t anchor="_bcc515cd-dee6-698f-8aad-bd69f7dc3e3b">This document itself was written and generated into RFC XML v2
(RFC7749) and RFC XML v3 (RFC7991) directly through asciidoctor-rfc,
an AsciiRFC generator.</t>
</abstract>
  </front>
  <middle>
    <section anchor="_introduction"><name>Introduction</name>

<t anchor="_181e8d51-108f-6ddb-f061-f4cb7ac02358">This document describes a markup language called "AsciiRFC", developed
specifically for the purpose of generating RFC XML document, based on
Asciidoctor syntax.  AsciiRFC can be used to generate compliant RFC
XML v2 and v3 documents through the usage of an open source, MIT-licensed
Ruby gem called "asciidoctor-rfc" written by the authors
<xref target="asciidoctor-rfc"></xref>.</t>

<section anchor="_designed_for_authoring_rfcs_and_internet_drafts"><name>Designed for authoring RFCs and Internet-Drafts</name>

<t anchor="_79b5c07a-2c93-d7f6-9388-011da56a7e88">Internet-Drafts and RFCs intended for publication submission to the
IETF can be written in a multitude of formats today, including:</t>

<ul anchor="_a15de9c3-5167-cf97-5c33-0e0012a2c868"><li>XML: RFC XML v2 <xref target="RFC7749"></xref> and v3 <xref target="RFC7991"></xref></li>
<li>nroff: through <xref target="NroffEdit"></xref></li>
<li>Microsoft Word: through usage of <xref target="RFC5385"></xref></li>
<li>Lyx: through <xref target="lyx2rfc"></xref></li>
<li>Pandoc: <xref target="RFC7328"></xref>, through <xref target="pandoc2rfc"></xref> or <xref target="draftr"></xref></li>
<li>Kramdown: through <xref target="kramdown-rfc2629"></xref></li>
<li>mmark: through <xref target="mmark"></xref></li>
</ul>

<t anchor="_93dd6cb2-121c-6523-705a-b7dcfd2c4c7d">Interestingly, the last three are Markdown <xref target="RFC7763"></xref> variants.</t>

<t anchor="_a088c22e-ee54-e201-b258-5d474a2f6fe5">As specified in <xref target="RFC7990"></xref>, the IETF intends for the canonical format
of RFCs to transition from plain-text ASCII to RFC XML v3 <xref target="RFC7991"></xref>.
While plain-text will continue to be accepted from authors by the
IETF, at least in the short- to medium-term, XML will be preferred for
submission, and any plain-text submissions will need to be converted
to RFC XML v3.</t>

<t anchor="_5e77afbc-d604-c3a2-5827-45e158b9ef83">While this need is already met for RFC XML v2 <xref target="RFC7749"></xref> by the tools
specified above, the transition to RFC XML v3 <xref target="RFC7991"></xref> places added
onus on authors to generate compliant XML.</t>
</section>

<section anchor="_relationship_between_asciirfc_asciidoc_and_asciidoctor"><name>Relationship between AsciiRFC, AsciiDoc and Asciidoctor</name>

<t anchor="_a2a167a4-d8d3-5cfa-72b7-c0586e6d0448"><xref target="AsciiDoc"></xref> is a lightweight markup language and an alternative to
Markdown, with features that make it attractive as a markup language
for RFC with XML output.</t>

<t anchor="_73a3ddcb-6854-7fe9-0644-4f08890f4abe"><xref target="Asciidoctor"></xref> is an open source,
MIT-licensed Ruby implementation of <xref target="AsciiDoc"></xref> that provides an
enhancement of the original AsciiDoc markup language.</t>

<t anchor="_4bf2bef9-1a58-8d86-6b10-ca2c5fe952d3">The variant of AsciiDoc syntax accepted by <xref target="Asciidoctor"></xref> is
hereafter called "Asciidoctor syntax".</t>

<t anchor="_3df0e5a5-26df-a046-ceee-97cff23bbad2">AsciiRFC, as described in this document, is an AsciiDoc variant developed
on Asciidoctor syntax, created for the purpose of generating RFC XML
documents.</t>
</section>

<section anchor="_comparison_with_rfc_xml_tools_based_on_markdown_variants"><name>Comparison with RFC XML tools based on Markdown variants</name>

<t anchor="_d635847e-5947-6113-5d47-f7d4419f6414"><xref target="RFC7764">1.2 of</xref> famously states that "there is no such thing as
'invalid' Markdown, there is no standard demanding adherence to the
Markdown syntax, and there is no governing body that guides or impedes
its development." While there are contexts where that flexibility
is useful, the authoring of RFCs does have a standard and a governing
body, and there is such a thing as invalid RFC XML. A more rigorous
and extensible
counterpart to Markdown, which still preserves its basic approach to
formatting, can generate RFC XML that encompasses a fuller
subset of the specification, and preempts malformed RFC XML output.
The proposed markup language and associated Ruby gem has several
advantages that we believe make it worth considering as an approach
to generating RFC XML.</t>

<ul anchor="_0a697ec9-d25d-88d2-8b4f-bcb5562f1fb1"><li>AsciiDoc was designed from the beginning as a publishing language:
it was initially intended as a plain-text alternative to the DocBook
XML schema. For that reason, Asciidoctor natively supports the full
range of formatting required by RFC XML (including notes, tables,
bibliographies, source-code blocks, and definition lists), without
resorting to embedded HTML or Markdown "flavours".</li>
<li>AsciiRFC covers the full range of elements in RFC XML v2 and RFC XML v3.</li>
<li>AsciiDoc in its Ruby-based Asciidoctor implementation is extensible,
with a well-defined API. (Extensions have been harnessed to deal with
bibliographic preprocessing for AsciiRFC.)</li>
<li>AsciiRFC allows granular control of rendering, including
user-specified attributes of text blocks.</li>
<li>The Asciidoctor implementation allows document inclusion, for
managing large-scale documentation projects.</li>
<li>AsciiRFC allows granular control of permutations of block nesting,
such as source code within lists or definition lists within unordered
lists.</li>
<li>As a more formal counterpart to Markdown, AsciiDoc is well-suited to
generating XML that needs to conform to a specified schema. The asciidoctor-rfc
Ruby gem developed around AsciiDoc validates its RFC XML output against the RelaxNG
schema defined for RFC XML, and reports any issues to the end user.</li>
<li>The asciidoctor-rfc Ruby gem incorporates validation not
only of the XML structure of the standard, but also of the IETF workgroups
it mentions against the latest listing online,
and the bibliographic entries for RFC and other standards registered
on <eref target="https://xml2rfc.tools.ietf.org"></eref>. The gem also dynamically
fetches bibliographic entries from the xml2rfc site, and uses them
to populate the RFC XML document.</li>
</ul>

<t anchor="_b8692841-f924-d727-14a8-8e63245550e5">As with Markdown, there is a wide range of tools that can render
AsciiDoc; so AsciiRFC drafts of RFC documents can be previewed and
accessed without depending on the RFC tools ecosystem. Our realisation
of RFC XML in AsciiRFC has aimed to ensure that, as much as possible,
the markup language can be can be processed by generic Asciidoctor
tools.</t>

<t anchor="_a44a5659-c8cb-b8ab-3dd7-2e9bd543d6b0">The only exception to this as an add-on is the optional bibliography
module, which allows bibliographies to be assembled on the fly based
on citations in a document: see <xref target="asciidoctor_bibliography"></xref>.</t>
</section>
</section>
    <section anchor="_conventions_used_in_this_document"><name>Conventions Used in This Document</name>

<section anchor="_terms_and_definitions"><name>Terms and Definitions</name>

<t anchor="_ad37ee16-def4-cb42-c071-f0495d25b939">The following terms and definitions apply to this document:</t>

<dl anchor="_656f4d64-7d3e-1ab4-f97b-0e6b3f631b87"><dt>AsciiDoc</dt><dd><t anchor="_be1524cc-2a44-98d7-8779-e401b9f70dd3">The AsciiDoc markup language generically, as described in <xref target="AsciiDoc"></xref>.</t>
</dd><dt>Asciidoctor syntax</dt><dd><t anchor="_f8d708ba-9179-d3c2-8c15-451805d1349e">The enhanced AsciiDoc syntax implemented by the <xref target="Asciidoctor"></xref>
Ruby gem.</t>
</dd><dt>AsciiRFC</dt><dd><t anchor="_b10aa5ed-1027-229b-e02b-c8b08af516ac">The AsciiDoc syntax developed for the purpose of generating RFC XML
document based on Asciidoctor syntax, as described in this document.</t>
</dd></dl>
</section>

<section anchor="_wrapping_lines_in_documentation_examples"><name>Wrapping Lines in Documentation Examples</name>

<t anchor="_533607df-ca09-6ce6-1bc4-75df6c466f43">This document contains a number of examples as fragments of XML. In
some cases, the examples contain URLs that are over 72 characters long
and so need to be wrapped for presentation in this document even though
they would not need to be wrapped in the actual source XML.</t>

<t anchor="_21086902-40b2-7cee-77ea-e6a99b58800f">This document adopts a policy similar to that described in
<xref target="I-D.wu-netmod-yang-xml-doc-conventions"></xref> to denote line wraps. When an
XML example contains a URL, that URL is always included in
double-quotes. If the URL would extend beyond 72 characters, the line
is wrapped and the wrap is indicated with a backslash ("\"). The
backslash appears without any additional space before the backslash and
with no further characters after the backslash.</t>

<t anchor="_9ac0f038-b50f-44bd-0b3d-e8ff1000aff7">For example, the following XML...</t>

<sourcecode anchor="_85f9e467-03c6-96ec-03d7-480f8ffa831e" type="xml"><![CDATA[<format type="TXT" target=
  "http://www.example.org/citations/cookpot.txt"/>]]></sourcecode>


<t anchor="_05f44693-eccb-9963-8830-1ec673c825cb">...may be presented as</t>

<sourcecode anchor="_b9bc8e13-f591-8e9e-6933-5bde2f6d336f" type="xml"><![CDATA[<format type="TXT" target=
  "http://www.example.org/citations/\
  cookpot.txt"/>]]></sourcecode>

</section>
</section>
    <section anchor="_document_structure_and_syntax"><name>Document Structure and Syntax</name>

<t anchor="_f1b85ff1-f131-49f4-e63e-96933260c964">AsciiRFC consists of a subset of Asciidoctor syntax
with the addition of bibliographic macros
(<xref target="asciidoctor_bibliography"></xref>).
Asciidoctor syntax is presented in the Asciidoctor user manual
<xref target="Asciidoctor-Manual"></xref>.</t>

<t anchor="_2d916ea6-87a3-30cb-ed74-e52f937f8f9b">AsciiRFC syntax consists of:</t>

<ul anchor="_12b9f2ca-500b-6324-daa6-9edaaaf0553e"><li>A document header, containing a title, a list of authors, and
document attributes in lines prefixed with <tt>:</tt>.</li>
<li>An optional document preamble, separated from the document header by a
blank line, and not containing any section titles.</li>
<li>A number of sections, set off by a section title (a line prefixed
with two or more <tt>=</tt>.)</li>
</ul>

<t anchor="_6fc0e0e0-be6b-f0ab-f5e4-5895f0e28fe5">A section may contain:</t>

<ul anchor="_2b038324-9aff-0327-f835-7332c79d4d69"><li>Other sections, whose level of nesting is indicated by the number of
<tt>=</tt> in their header.</li>
<li>Blocks of text. Blocks can have metadata (including a title, an
anchor for cross-references, and attributes.)</li>
</ul>

<t anchor="_f25a4d5f-e03a-fbd3-9781-a03d70903600">Blocks can be:</t>

<ul anchor="_388d2d5a-72c0-8637-8071-379a0f1c4433"><li>Paragraphs, which are terminated by blank lines.</li>
<li>Lists. List items are by default paragraphs, but can span over
multiple paragraphs.</li>
<li>Delimited blocks (with a line delimiter on either side of them);
these include tables, notes, sidebars, source code, block quotes,
examples, and unprocessed content (e.g. raw XML). Delimited blocks
contain by default one or more paragraphs.</li>
<li>List items can contain other blocks, including both nested lists and
delimited blocks.</li>
<li>Some delimited blocks can contain other delimited blocks; for
example, examples can contain source code as well as discussion in
paragraphs.</li>
<li>Blocks of text consist of inline text, which itself can contain
markup.</li>
</ul>

<t anchor="_443513fe-7298-291a-baa7-0d2db8d65ce2">Inline markup includes:</t>

<ul anchor="_8925139c-030b-c64b-5147-56981cd84426"><li>Text formatting: Bold, italic, superscript, subscript, monospace.</li>
<li>Markup macros: the <tt>bcp14</tt> and <tt>comment</tt> macros. (Asciidoctor syntax supports custom markup macros.)</li>
<li>URLs, including display text to render.</li>
<li>Inline anchors.</li>
<li>Cross-references to anchors (IDs of blocks or spans of text),
including display text to render.</li>
<li>Images: SVG only, as specified in <xref target="RFC7996"></xref>.</li>
<li>Index terms.</li>
</ul>

<section anchor="_unsupported_features_compared_with_asciidoctor_syntax"><name>Unsupported features compared with Asciidoctor syntax</name>

<t anchor="_6a618485-a3ec-2b88-7e14-42d64770cf3f">Several features from Asciidoctor are not supported within AsciiRFC
due to the lack of support within RFC XML, including:</t>

<ul anchor="_1fb51d49-6414-cc75-5826-23f5c60fd077"><li>Audio and video files are not supported in AsciiRFC as today's
RFC XML structure does not support audio or video.</li>
<li>Equations are not supported as there is no current RFC XML
equivalent. Asciidoctor provides native support for
<xref target="AsciiMathML"></xref> and <xref target="TeX-LaTeX"></xref>, via the <xref target="MathJax"></xref> tool.</li>
<li>Footnotes are not supported in AsciiRFC as there is no equivalent
semantic representation in RFC XML.</li>
</ul>

<t anchor="_3be9d1b3-1177-328a-ddf5-4593acc3458d">These carved out features can be easily supported by AsciiRFC
once RFC XML allows these elements.</t>
</section>

<section anchor="_mapping_to_rfc_xml_syntax"><name>Mapping To RFC XML syntax</name>

<t anchor="_8325d9f6-8acb-54a1-bde8-e68956d57d92">The Asciidoctor syntax document structure aligns with both the RFC XML v2
and the RFC XML v3 structure.  In the following, RFC XML v3 equivalences are given
to the basic Asciidoctor structure.</t>

<dl anchor="_1a0d266b-823c-2ea2-3fb4-34193eaf8389"><dt>Header</dt><dd><t anchor="_85e78eab-c374-fa50-e87f-9a71d833ada0"><tt>&#x3c;rfc&#x3e;</tt> attributes, most <tt>front</tt> elements.</t>
</dd><dt>Preamble</dt><dd><t anchor="_30e6c94e-4bad-f671-a163-12cbcc560d77"><tt>front/abstract</tt> and <tt>front/note</tt>.</t>
</dd><dt>Sections</dt><dd><t anchor="_c9456d75-a45a-6537-5dba-372cdfcb95c7"><tt>middle/section</tt> elements.</t>
</dd><dt>Sections with <tt>bibliography</tt> style attribute</dt><dd><t anchor="_113addf9-707d-091f-242c-8acb71404bdc"><tt>back/references</tt> elements.</t>
</dd><dt>Sections with <tt>appendix</tt> style attribute</dt><dd><t anchor="_6ab0dd1b-069a-cc0a-397e-12e7b5c5b1a6"><tt>back/section</tt> elements.</t>
</dd><dt>Paragraphs</dt><dd><t anchor="_c16f4533-cb05-8585-9736-f83def4ad350"><tt>t</tt> elements.</t>
</dd><dt>Lists</dt><dd><t anchor="_c50715dd-581e-959e-3d16-7f4b00a94604"><tt>ul</tt>, <tt>ol</tt>, <tt>dl</tt> elements.</t>
</dd><dt>Delimited blocks</dt><dd><t anchor="_4e78c882-dd0a-228c-75ea-74bfaa7756bc"><tt>artwork</tt>, <tt>aside</tt>, <tt>blockquote</tt>, <tt>figure</tt>, <tt>note</tt>, <tt>sourcecode</tt>, <tt>table</tt>.</t>
</dd><dt>Inline markup</dt><dd><t anchor="_2a06efc7-c5d1-3f5a-5e30-61cc166c8cfb"><tt>bcp14</tt>, <tt>br</tt>, <tt>cref</tt>, <tt>em</tt>, <tt>eref</tt>, <tt>iref</tt>, <tt>relref</tt>, <tt>strong</tt>, <tt>sub</tt>,
<tt>sup</tt>, <tt>tt</tt>, <tt>xref</tt>.</t>
</dd></dl>

<t anchor="_791a8300-0c1a-e60f-0d7a-31e61ace3b70">Full details of the mapping of AsciiRFC elements to RFC XML v2 and v3
elements, and of how to convert AsciiRFC documents to RFC XML, are
given in the documentation of <xref target="asciidoctor-rfc"></xref>.</t>
</section>

<section anchor="_example_illustrations"><name>Example Illustrations</name>

<t anchor="_3e0d3f73-a6e2-4a47-3466-45ee30bcdeda">This document utilizes example documents provided in <xref target="appendix-a"></xref> for
demonstration of AsciiRFC syntax and usage. The source files and published
versions (at the IETF Datatracker) of these example documents are
available in <xref target="appendix-a"></xref>.</t>

<ul anchor="_74eba0aa-bc4d-59e2-d80b-37558436dd4d"><li>"A Minimal Internet-Draft In AsciiRFC" <xref target="example-1-asciirfc"></xref></li>
<li>"The Holy Hand Grenade of Antioch" <xref target="example-2-asciirfc"></xref></li>
<li>"An API For Calendar-Based Fortune Heuristics Services" <xref target="example-3-asciirfc"></xref></li>
</ul>
</section>

<section anchor="_simple_illustration"><name>Simple Illustration</name>

<t anchor="_75ecf894-1164-eec7-c363-1dc3defa1210">This section gives an overview of how to create an RFC XML document in
AsciiRFC, with some pitfalls to be aware of.</t>

<t anchor="_66042628-4bbf-750f-1aa0-6b72e96bed8a">Illustrations are in RFC XML v3 and RFC XML v2.</t>

<t anchor="_7680d76c-cc7f-b770-2d88-058820dcb288">A sample AsciiRFC document is provided in <xref target="source-sample-asciirfc"></xref>,
together with its corresponding rendering in:</t>

<ul anchor="_d31e98e6-e4ac-12b4-6254-7fc879734686"><li>RFC XML v3 (<xref target="source-sample-asciirfc-output-v3"></xref>)</li>
<li>RFC XML v2 (<xref target="source-sample-asciirfc-output-v2"></xref>)</li>
</ul>

<t anchor="source-sample-asciirfc" keepWithNext="true">EXAMPLE  1: Sample Internet-Draft in AsciiRFC</t><sourcecode anchor="_3921c824-59f1-d32f-a008-6b1bfa835978" type="asciidoc"><![CDATA[<CODE BEGINS>
= A Minimal Internet-Draft In AsciiRFC
:doctype: internet-draft
:name: draft-asciirfc-minimal-02
:abbrev: AsciiRFC Example
:status: informational
:ipr: trust200902
:submissionType: individual
:area: Internet
:intended-series: full-standard
:revdate: 2018-04-12T00:00:00Z
:fullname: Josiah Stinkney Carberry
:lastname: Carberry
:forename_initials: J. S.
:organization: Brown University
:phone: +1 401 863 1000
:street: Box K, 69 Brown Street
:city: Providence
:code: 02912
:country: United States of America
:uri: https://www.brown.edu
:email: josiah.carberry@ribose.com
:fullname_2: Truman Grayson
:lastname_2: Grayson
:forename_initials_2: T.
:organization_2: Brown University
:phone_2: +1 401 863 1000
:street_2: Box G, 69 Brown Street
:city_2: Providence
:code_2: 02912
:country_2: United States of America
:uri_2: https://www.brown.edu
:email_2: truman.grayson@ribose.com

[abstract]

This document provides a template on how to author (or migrate!)
a new Internet-Draft / RFC in the AsciiRFC format.

This template requires usage of the `asciidoctor-rfc` Ruby gem.

[#introduction]
== Introduction

AsciiRFC <<I-D.ribose-asciirfc>> is an extremely simple way to
author Internet-Drafts and RFCs without needing to manually
craft RFC XML conforming to <<RFC7991>>.

This is a template specifically made for authors to easily
start with creating an Internet-Draft conforming to <<RFC7991>>
and submittable to the IETF datatracker.

[#conventions]
== Terms and Definitions

The key words "*MUST*", "*MUST NOT*", "*REQUIRED*", "*SHALL*",
"*SHALL NOT*", "*SHOULD*", "*SHOULD NOT*", "*RECOMMENDED*",
"*NOT RECOMMENDED*", "*MAY*", and "*OPTIONAL*" in this
document are to be interpreted as described in BCP 14
<<RFC2119>> <<RFC8174>> when, and only when, they appear in
all capitals, as shown here.

This document also refers to the following terms and
definitions:

AsciiRFC::
  an AsciiDoc-derived syntax used for authoring RFCs and
  Internet-Drafts, as defined in <<I-D.ribose-asciirfc>>.

[#symbols]
== Symbols And Abbreviations

ADRFC::
  abbreviated form of AsciiRFC


[#security]
== Security Considerations

Any security considerations should be placed here.

As described in <<main>> (here's how you refer a local anchor),
local tools have to be installed before the document template
can be built.

Running of these local tools *MAY* produce unintended side
effects that impact security.

[#iana]
== IANA Considerations

This document does not require any action by IANA.

But if it does, such as proposing changes to IANA registries,
please include them here.

[bibliography]
== Normative References

//bibliography::norm[]
++++

<reference anchor='RFC2119'
  target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement
      Levels</title>
    <author initials='S.' surname='Bradner' fullname='S. Bradner'>
      <organization />
    </author>
    <date year='1997' month='March' />
    <abstract>
      <t>In many standards track documents several words are
        used to signify the requirements in the specification.
        These words are often capitalized. This document defines
        these words as they should be interpreted in IETF
        documents.  This document specifies an Internet Best
        Current Practices for the Internet Community, and
        requests discussion and suggestions for improvements.
      </t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC7991'
  target='https://www.rfc-editor.org/info/rfc7991'>
  <front>
    <title>The &#x22;xml2rfc&#x22; Version 3 Vocabulary</title>
    <author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
      <organization />
    </author>
    <date year='2016' month='December' />
    <abstract>
      <t>This document defines the &#x22;xml2rfc&#x22;
        version 3 vocabulary: an XML-based language used for
        writing RFCs and Internet-Drafts.  It is heavily derived
        from the version 2 vocabulary that is also under
        discussion.  This document obsoletes the v2 grammar
        described in RFC 7749.</t>
      </abstract>
  </front>
  <seriesInfo name='RFC' value='7991'/>
  <seriesInfo name='DOI' value='10.17487/RFC7991'/>
</reference>

<reference anchor='RFC8174'
  target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119
      Key Words</title>
    <author initials='B.' surname='Leiba' fullname='B. Leiba'>
      <organization />
    </author>
    <date year='2017' month='May' />
    <abstract>
      <t>RFC 2119 specifies common key words that may be
        used in protocol specifications.  This document aims to
        reduce the ambiguity by clarifying that only UPPERCASE
        usage of the key words have the defined special
        meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>
++++

[bibliography]
== Informative References

//bibliography::info[]
++++

<reference anchor='IETF.TLP'
  target='https://trustee.ietf.org/trust-legal-provisions.html'>
  <front>
  <title>IETF Trust Legal Provisions (TLP)</title>
  <author>
    <organization>IETF</organization>
  </author>
  <date month='April' day='12' year='2018' />
  </front>
</reference>

<reference anchor='RNP' target='https://github.com/riboseinc/rnp/'>
  <front>
    <title>RNP: A C library approach to OpenPGP</title>
    <author>
      <organization>Ribose Inc.</organization>
      <address>
        <postal>
          <street>Suite 1111, 1 Pedder Street</street>
          <city>Central</city>
          <region>Hong Kong</city>
          <country>Hong Kong</country>
        </postal>
        <email>open.source@ribose.com</email>
        <uri>https://www.ribose.com</uri>
      </address>
    </author>
    <date day='31' month='March' year='2018'/>
  </front>
</reference>

<reference anchor='I-D.ribose-asciirfc'>
  <front>
  <title>
    AsciiRFC: Authoring Internet-Drafts And RFCs Using AsciiDoc
  </title>
  <author initials="R" surname="Tse" fullname="Ronald Tse">
    <organization/>
  </author>
  <author initials="J" surname="Lau" fullname="Jeffrey Lau">
    <organization/>
  </author>
  <author initials="N" surname="Nicholas" fullname="Nick Nicholas">
    <organization/>
  </author>
  <author initials="P" surname="Brasolin" fullname="Paolo Brasolin">
    <organization/>
  </author>
    <date month="March" day="23" year="2018"/>
    <abstract>
      <t>This document describes an AsciiDoc syntax
extension called AsciiRFC, designed for authoring IETF
Internet-Drafts and RFCs.  AsciiDoc is a human readable document
markup language which affords more granular control over markup
than comparable schemes such as Markdown.  The AsciiRFC syntax
is designed to allow the author to entirely focus on text,
providing the full power of the resulting RFC XML through the
AsciiDoc language, while abstracting away the need to manually
edit XML, including references.  This document itself was
written and generated into RFC XML v2 (RFC7749) and RFC XML v3
(RFC7991) directly through asciidoctor-rfc, an AsciiRFC
generator.</t>
    </abstract>
  </front>
<seriesInfo name="Internet-Draft" value="draft-ribose-asciirfc-04"/>
<format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ribose-asciirfc-04.txt"/>
</reference>

<reference anchor="RFC5378"
  target="https://www.rfc-editor.org/info/rfc5378">
  <front>
  <title>Rights Contributors Provide to the IETF Trust</title>
  <author initials="S."
    surname="Bradner" fullname="S. Bradner" role="editor">
    <organization/>
  </author>
  <author initials="J."
    surname="Contreras" fullname="J. Contreras" role="editor">
    <organization/>
  </author>
  <date year="2008" month="November"/>
  <abstract><t>The IETF policies about rights in Contributions
    to the IETF are designed to ensure that such Contributions
    can be made available to the IETF and Internet communities
    while permitting the authors to retain as many rights as
    possible. This memo details the IETF policies on rights in
    Contributions to the IETF. It also describes the
    objectives that the policies are designed to meet. This
    memo obsoletes RFCs 3978 and 4748 and, with BCP 79 and
    RFC 5377, replaces Section 10 of RFC 2026. This document
    specifies an Internet Best Current Practices for the
    Internet Community, and requests discussion and
    suggestions for improvements.</t></abstract>
  </front>
  <seriesInfo name="BCP" value="78"/>
  <seriesInfo name="RFC" value="5378"/>
  <seriesInfo name="DOI" value="10.17487/RFC5378"/>
</reference>

<reference anchor='RFC7253'
  target='https://www.rfc-editor.org/info/rfc7253'>
  <front>
    <title>The OCB Authenticated-Encryption Algorithm</title>
    <author initials='T.' surname='Krovetz' fullname='T. Krovetz'>
      <organization />
    </author>
    <author initials='P.' surname='Rogaway' fullname='P. Rogaway'>
      <organization />
    </author>
    <date year='2014' month='May' />
    <abstract><t>This document specifies OCB, a shared-key
        blockcipher-based encryption scheme that provides
        confidentiality and authenticity for plaintexts and
        authenticity for associated data.  This document is a product
        of the Crypto Forum Research Group (CFRG).</t></abstract>
  </front>
  <seriesInfo name='RFC' value='7253'/>
  <seriesInfo name='DOI' value='10.17487/RFC7253'/>
</reference>
++++


[appendix]
[#appendix-a]
== Examples

=== Example 1

Here's an example of a properly wrapped code snippet in
accordance with rules specified in <<code-snippets>>.

[source,json]
----
<CODE BEGINS>
{
  "code": {
    "encoding": "ascii",
    "type":     "rfc",
    "authors":  [ "Josiah Carberry", "Truman Grayson" ]
  }
}
<CODE ENDS>
----

[#acknowledgements]
== Acknowledgements

The authors would like to thank their families.
<CODE ENDS>]]></sourcecode>

<t anchor="_fa3a6c47-72c7-6f3d-144a-08a7f89f58a8">The first block of text, from
<tt>= Template For Writing An Internet-Draft In AsciiRFC</tt> through to
<tt>:email_2: <eref target="mailto:thomas.kandell@brown.edu"></eref></tt>, is
the document header. It contains a title in the first line, an author
attribution (<tt>Josiah Carberry; Thomas Kandell</tt>), and then a set of
document attributes, conveying
information about the document as well as information about its
authors. This information ends up in RFC XML either as attributes of the root
<tt>rfc</tt> tag, elements of the <tt>front</tt> tag, or processing instructions.</t>

<t anchor="_ebcc41cc-234c-d7c7-d56a-be26210a3623">The following blocks of text, up until the first section header
(<tt>== Introduction</tt>), are the document preamble. They are
treated by the document converter as containing the document abstract
(<tt>abstract</tt>), followed by any notes if present.</t>

<t anchor="_d7f10b9d-76e4-13c5-92f7-f7f13fe34e4a">Section headers delimit the sections of the main body of the document,
starting with <tt>== Introduction</tt>. The document converter treats the first section
of the document as the start of the <tt>middle</tt> section in RFC XML.
The first section header is followed by a paragraph, and other
sections and paragraphs. The number of <tt>=</tt> signs can be one higher than that of
the preceding section header, which indicates that they are subsections
of that section; so <tt>=== Operators</tt>
is a subsection of the preceding <tt>== Symbols And Abbreviations</tt>.</t>

<t anchor="_f8fae24e-3d7e-d37e-9d0b-66cf3aa08735">The paragraphs contain some inline formatting
(e.g. boldface: <tt>*MUST*</tt>, monospace: <tt>`type`</tt>), and sections can
also contain blocks other than normal paragraphs; the section
<tt>== Operators</tt>, for example, contains
a definition list (whose terms are delimited by <tt>::</tt>), and the
subsection <tt>=== Example 1</tt> contains a code snippet
(delimited by <tt>----</tt>, and tagged with the style attribute <tt>[source,json]</tt>,
indicating that this is a JSON sourcecode listing). The document
can also include comments (<tt>//</tt> for inline, <tt>////</tt> for blocks),
which are not rendered when the document is processed.</t>

<t anchor="_1a09cb40-144b-ad47-86eb-a8972b4292e7">The introductory section in this example
contains a citation of a reference, which in this
version of AsciiRFC is treated identically to a cross-reference
(<tt><t><RFC7253>&#x3e;</RFC7253></t></tt>) -- the crossreference being to the references
section of the document. Sections and blocks of texts within the
document can also be the target of crossreferences; for example,
the section header <tt>=== Operators</tt>
is preceded by the anchor <tt>[#operators]</tt>, and that anchor
is already referenced in the section <tt>== Security Considerations</tt>.</t>

<t anchor="_6a984056-d1ab-2241-0b18-72cacbf61a65">The third last and second last section are tagged with the style attribute
<tt>[bibliography]</tt>, which identifies them as references containers; the
document converter accordingly inserts them into the <tt>back</tt> element under
RFC XML. The contents of the references sections are in this
instance raw XML, delimited as a passthrough block (with
<tt>++++</tt>), which the converter does not alter.</t>

<t anchor="_373f6f38-55c5-2bf4-4693-388e6718d273">The final section is tagged with the style attribute <tt>[appendix]</tt>,
and is treated as such.</t>

<t anchor="_68e95cae-5afd-4f10-49fe-7198443e735e">The RFC XML v3 document generated from this AsciiRFC document is:</t>

<t anchor="source-sample-asciirfc-output-v3" keepWithNext="true">EXAMPLE  2: Sample Internet-Draft In AsciiRFC, Output In RFC XML v3 Format</t><sourcecode anchor="_8340afad-5232-3776-9b8e-eaf89376eda1" type="xml"><![CDATA[<CODE BEGINS>
Unresolved directive in sections/03-asciidoc.adoc - include::../examples/rfc-asciirfc-minimal/xml3/draft-asciirfc-minimal.xml[]
<CODE ENDS>]]></sourcecode>

<t anchor="_079bf101-d3a5-3b93-6aa7-d18307d60593">Some default processing instructions have already been prefixed to the
XML.</t>

<t anchor="_2cbcec39-6aa6-4515-64b3-fd220b65ca53">Our AsciiRFC converter can also generate RFC XML v2 from the same
source AsciiRFC, as shown in <xref target="source-sample-asciirfc-output-v2"></xref>.
Output in RFC XML v2 is not extensively described in this document.</t>

<t anchor="source-sample-asciirfc-output-v2" keepWithNext="true">EXAMPLE  3: Sample Internet-Draft In AsciiRFC, Output In RFC XML v2 Format</t><sourcecode anchor="_7a1d27ab-d8e1-96dc-e7d5-dbfb5eb9431b" type="xml"><![CDATA[<CODE BEGINS>
Unresolved directive in sections/03-asciidoc.adoc - include::../examples/rfc-asciirfc-minimal/xml2/draft-asciirfc-minimal.xml[]
<CODE ENDS>]]></sourcecode>
</section>
</section>
    <section anchor="header"><name>Header And Document Attributes</name>

<t anchor="_36cfa6a9-762b-257c-8833-41f851a6a6b2">The header gives the document title, followed by an optional author
attribution, and a series of document attributes, with no empty lines.</t>

<section anchor="_title_and_basic_attributes"><name>Title And Basic Attributes</name>

<t anchor="_49de5c87-c160-95fc-041e-6872de9aacfa">Document attributes are used to populate attributes of the root <tt>rfc</tt>
element, <tt>front</tt> elements, and document-level processing instructions.</t>

<ul anchor="_087aaddf-4757-e328-9c13-2b53bdd5aa41"><li><tt>:doctype:</tt> determines  whether the document will be considered
<tt>rfc</tt> or <tt>internet-draft</tt>, and interprets other attributes
accordingly.</li>
<li>Certain attributes (<tt>workgroup</tt>, <tt>area</tt>, <tt>keyword</tt>) are comma
delimited, and result in repeated RFC XML elements.</li>
</ul>

<t anchor="_591e5c53-fba0-ba78-8084-d60b54202f55"><xref target="source-asciirfc-header"></xref> demonstrates how to set the document header
in AsciiRFC, with its rendering in RFC XML v3 shown in
<xref target="source-asciirfc-header-v3"></xref>.</t>

<t anchor="source-asciirfc-header" keepWithNext="true">EXAMPLE  1: AsciiRFC Document Header</t><sourcecode anchor="_155cd144-94e4-38e8-8fe5-3ae14de71934" type="asciidoc"><![CDATA[<CODE BEGINS>
= The Holy Hand Grenade of Antioch
Arthur son of Uther Pendragon
:doctype: internet-draft
:abbrev: Hand Grenade of Antioch
:updates: 8140
:submission-type: independent
:name: draft-camelot-holy-grenade-01
:status: informational
:consensus: false
:area: General, Operations and Management
:keyword: rabbits, grenades, antioch, camelot
:ipr: trust200902
:toc-include: true
:sort-refs: true
:revdate: 2018-04-15T00:00:00Z
<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-header-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC Document Header Rendered As RFC XML v3</t><sourcecode anchor="_93363074-08b3-5f5b-6d42-14fdda7da171" type="xml"><![CDATA[<CODE BEGINS>
Unresolved directive in sections/04-header.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[lines="13..23,35,37..40"]
<CODE ENDS>]]></sourcecode>
</section>

<section anchor="_detailed_author_information"><name>Detailed Author Information</name>

<t anchor="_ef719f42-cea7-bf50-2805-5dbc3144d9a5">The document header can spell out further information about authors,
including contact details. The AsciiRFC header is shown in
<xref target="source-asciirfc-header-authors"></xref> with its rendering in RFC XML v3
shown in <xref target="source-asciirfc-header-authors-v3"></xref>.</t>

<t anchor="source-asciirfc-header-authors" keepWithNext="true">EXAMPLE  1: AsciiRFC Document Header With One Author</t><sourcecode anchor="_1a769e9c-fa58-762a-15b8-390a0f2eca90" type="asciidoc"><![CDATA[<CODE BEGINS>
= The Holy Hand Grenade of Antioch
Arthur son of Uther Pendragon
:doctype: internet-draft
:abbrev: Hand Grenade of Antioch
:updates: 8140
:submission-type: independent
:name: draft-camelot-holy-grenade-01
:status: informational
:consensus: false
:area: General, Operations and Management
:keyword: rabbits, grenades, antioch, camelot
:ipr: trust200902
:toc-include: true
:sort-refs: true
:revdate: 2018-04-15T00:00:00Z
:fullname: Arthur son of Uther Pendragon
:forename_initials: A.
:lastname: Pendragon
:email: arthur.pendragon@ribose.com
:organization: Camelot
:uri: http://camelot.gov.example
:street: Palace\ Camel Lot 1
:city: Camelot
:region: England
:country: United Kingdom
<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-header-authors-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC Document Header With One Author (RFC XML v3)</t><sourcecode anchor="_0599204d-e948-0996-8414-b99d66504018" type="xml"><![CDATA[<CODE BEGINS>
Unresolved directive in sections/04-header.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[lines="13..40"]
<CODE ENDS>]]></sourcecode>

<t anchor="_152f7d40-a983-3dc4-606f-20248898187a">Details of a second, third etc. author, including their organization and
contact details, are provided by suffixing the relevant author attributes with
<tt>_2</tt>, <tt>_3</tt>  etc., as shown in <xref target="source-asciirfc-header-mauthors"></xref> and
its RFC XML v3 rendering <xref target="source-asciirfc-header-mauthors-v3"></xref>.</t>

<t anchor="source-asciirfc-header-mauthors" keepWithNext="true">EXAMPLE  3</t><sourcecode anchor="_511f03c7-2ab7-2619-c76e-0b9d2be3ce30" type="asciidoc"><![CDATA[<CODE BEGINS>
= An API For Calendar-Based Fortune Heuristics Services
Gabriel Destiny; Charise Luck
:doctype: internet-draft
:abbrev: Calendar Fortune Heuristics API
:name: draft-divination-cfapi-00
:status: informational
:ipr: trust200902
:area: Internet
:submission-type: independent
:intended-series: informational
:revdate: 2018-03-23T00:00:00Z
:lastname: Destiny
:fullname: Gabriel Destiny
:forename_initials: G.
:organization: Divination Inc.
:email: gabriel.destiny@ribose.com
:street: 9288 N Divine Street
:city: Dunn
:code: 28334
:region: NC
:country: United States of America
:lastname_2: Luck
:fullname_2: Charise Luck
:forename_initials_2: C.
:organization_2: Divination Inc.
:email_2: charise.luck@ribose.com
:street_2: 9288 N Divine Street
:city_2: Dunn
:code_2: 28334
:region_2: NC
:country_2: United States of America
<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-header-mauthors-v3" keepWithNext="true">EXAMPLE  4: AsciiRFC Document Header With Multiple Authors (RFC XML v3)</t><sourcecode anchor="_c784c3de-cf41-e692-2ee4-518f8c823189" type="xml"><![CDATA[<CODE BEGINS>
Unresolved directive in sections/04-header.adoc - include::../examples/rfc-divination-cfapi/xml3/draft-divination-cfapi.xml[lines=11..47]
<CODE ENDS>]]></sourcecode>

<t anchor="_15201a4d-eaa1-0fdd-f4c8-bcbb87aa8602">The initial author attribution in AsciiRFC, e.g.
<tt>Gabriel Destiny; Charlise Luck</tt>
in the example above, expects a strict format of First Name, zero or
more Middle Names, Last name, and cannot process honorifics like "Dr."
or suffixes like "Jr.".</t>

<t anchor="_5d0292e4-f7b6-692a-474a-ddda32720712">Name attributes with any degree of complexity should be overriden by
using the <tt>:fullname:</tt> and <tt>:lastname:</tt> attributes. The AsciiRFC
<tt>:forename_initials:</tt> attribute replaces the built-in Asciidoctor
syntax <tt>:initials:</tt> attribute (which includes the surname initial),
and is not automatically populated from the name attribution.</t>
</section>

<section anchor="_xml_processing_information"><name>XML Processing Information</name>

<t anchor="_9c354d34-3df8-977b-f090-5566bd603d6b">A document header may also contain attribute headers which are treated
as XML processing instructions. An AsciiRFC example is shown in
<xref target="source-asciirfc-header-pi"></xref> with its rendering in
<xref target="source-asciirfc-header-pi-v3"></xref>. (Note that several processing
instructions are included by default in the output of the AsciiRFC
processor.)</t>

<t anchor="source-asciirfc-header-pi" keepWithNext="true">EXAMPLE  1: AsciiRFC Document Header With XML Processing Information</t><sourcecode anchor="_f4cd4b48-c7b2-8b57-765d-ba06a8c77cb1" type="asciidoc"><![CDATA[<CODE BEGINS>
= The Holy Hand Grenade of Antioch
Arthur son of Uther Pendragon
:doctype: internet-draft
:abbrev: Hand Grenade of Antioch
:updates: 8140
:submission-type: independent
:name: draft-camelot-holy-grenade-01
:status: informational
:consensus: false
:ipr: trust200902
:comments: yes
:notedraftinprogress: yes
<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-header-pi-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC Document Header With XML Processing Information (RFC XML v3)</t><sourcecode anchor="_ee084c1f-a9b3-d866-4a33-e9402dc5c5c0" type="xml"><![CDATA[<CODE BEGINS>
Unresolved directive in sections/04-header.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[lines="1..23,35"]
<CODE ENDS>]]></sourcecode>

<t anchor="_75807638-0de8-10ef-0ae6-845b1ca4c163">In the foregoing, values for the processing instructions <tt>strict</tt>, <tt>compact</tt>,
<tt>toc</tt> etc are included by default; but <tt>comments</tt> and <tt>notedraftinprogress</tt>
are included as specified in the AsciiRFC document header. The default
values provided for processing instructions can in fact be overriden through
the AsciiRFC document header.</t>
</section>

<section anchor="_asciirfc_specific_document_attributes"><name>AsciiRFC-specific Document Attributes</name>

<t anchor="_ed7d01a6-2e17-f4fe-a4d9-4373c4a978c9">A few document attributes are specific to the operation of the RFC XML
document converter:</t>

<dl anchor="_f58a2ef8-d083-9448-8108-19cb3676e147"><dt><tt>:no-rfc-bold-bcp14: false</tt> </dt><dd><t anchor="_17efb8ca-0c21-6716-dc7b-640f5ac2e3e7">overrides the wrapping by default of boldface uppercase BCP14
<xref target="RFC2119"></xref> words (e.g. <tt>*MUST NOT*</tt>) with the <tt>bcp14</tt> element.</t>
</dd><dt><tt>:smart-quotes: false</tt> </dt><dd><t anchor="_6a6d7519-1c5d-a450-1df4-edbd86fbcb2d">overrides Asciidoctor's conversion of straight quotes and
apostrophes to smart quotes and apostrophes.</t>
</dd><dt><tt>:inline-definition-lists: true</tt> </dt><dd><t anchor="_a0989add-a690-ee73-46f3-c9f117d35f2b">overrides the RFC XML v2 <tt>idnits</tt> requirement that a blank line be
inserted between a definition list term and its definition.</t>
</dd></dl>

<t anchor="source-asciirfc-header-rfc" keepWithNext="true">EXAMPLE  1: AsciiRFC Document Header Without RFC-specific Attributes</t><sourcecode anchor="_17a5630f-5360-495c-85e4-67f0e4d0bcfb" type="asciidoc"><![CDATA[<CODE BEGINS>
= The Holy Hand Grenade of Antioch
Arthur son of Uther Pendragon
:doctype: internet-draft
:status: informational
:name: draft-camelot-holy-grenade-00

== Section 1
The specification *MUST NOT* use the word _doesn't_.
<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-header-rfc-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC Document Header Without RFC-specific Attributes (RFC XML v3)</t><sourcecode anchor="_65183539-a1f0-c1b1-3600-9cc8b9a614bf" type="xml"><![CDATA[<CODE BEGINS>
<rfc submissionType="IETF" prepTime="2017-11-25T10:23:39Z" version="3">
  <front>
    <title>The Holy Hand Grenade of Antioch</title>
    <seriesInfo name="Internet-Draft" status="informational"
        stream="IETF" value="draft-camelot-holy-grenade-00" />
    <author fullname="Arthur son of Uther Pendragon" surname="Pendragon"
initials="A.">
    </author>
    <date day="25" month="November" year="2017" />
  </front>
  <middle>
    <section anchor="_section_1" numbered="false">
      <name>Section 1</name>
      <t>The specification  <bcp14>MUST NOT</bcp14>
        use the word <em> doesn&#8217;t</em>.</t>
    </section>
  </middle>
</rfc>
<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-header-override" keepWithNext="true">EXAMPLE  3: AsciiRFC Document Header With Overridden RFC-specific Attributes</t><sourcecode anchor="_e56ba083-b2f5-aa18-2a78-cadbb4173931" type="asciidoc"><![CDATA[<CODE BEGINS>
= The Holy Hand Grenade of Antioch
Arthur son of Uther Pendragon
:doctype: internet-draft
:status: informational
:name: draft-camelot-holy-grenade-00
:no-rfc-bold-bcp14: false
:smart-quotes: false

== Section 1
The specification *MUST NOT* use the word _doesn't_.
<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-header-override-v3" keepWithNext="true">EXAMPLE  4: AsciiRFC Document Header With Overridden RFC-specific Attributes (RFC XML v3)</t><sourcecode anchor="_dcabcdfb-a587-4da1-6327-3f1ea86fc5a6" type="xml"><![CDATA[<CODE BEGINS>
<rfc submissionType="IETF" prepTime="2017-11-25T10:23:39Z" version="3">
  <front>
    <title>The Holy Hand Grenade of Antioch</title>
    <seriesInfo name="Internet-Draft" status="informational"
        stream="IETF" value="draft-camelot-holy-grenade-00" />
    <author fullname="Arthur son of Uther Pendragon" surname="Pendragon"
initials="A.">
    </author>
    <date day="25" month="November" year="2017" />
  </front>
  <middle>
    <section anchor="_section_1" numbered="false">
      <name>Section 1</name>
      <t>The specification <strong>MUST NOT</strong>
        use the word <em>doesn't</em>.</t>
    </section>
  </middle>
</rfc>
<CODE ENDS>]]></sourcecode>
</section>
</section>
    <section anchor="preamble"><name>Preamble</name>

<t anchor="_3ab45455-d12c-dbf8-20ec-a3f18e286183">The preamble in AsciiRFC is the text between the end of the document header
(which terminates with a blank line) and the first section of text.</t>

<t anchor="_807ff6d6-e986-6f0c-a285-85536466761e">Any paragraphs of text in the preamble are treated as an abstract, and may
optionally be tagged with the <tt>abstract</tt> style attribute.</t>

<t anchor="_de7bb1ec-5791-c3cf-509e-696107135f01">Any notes in the preamble are treated as a <tt>note</tt> element.</t>

<t anchor="_dcaa8bf3-fb6d-792d-f984-670c9f827037">An example of setting the preamble is given in
<xref target="source-asciirfc-preamble"></xref> with its rendering in
<xref target="source-asciirfc-preamble-v3"></xref>.</t>

<t anchor="source-asciirfc-preamble" keepWithNext="true">EXAMPLE  1: AsciiRFC With Preamble</t><sourcecode anchor="_3b8836cd-cbeb-77aa-c8d7-03f144ff34fa" type="asciidoc"><![CDATA[<CODE BEGINS>

[abstract]
The menagerie of beasts and artefacts depicted in RFC8140
may be usefully supplemented by other renowned figures of
Internet and more general lore. This document extends the
menagerie to the seminal fable of the
"Holy Hand Grenade of Antioch", as depicted in the
Monty Python film "Monty Python and the Holy Grail",
as well as "Spamalot", the musical inspired by the movie.

[NOTE,remove-in-rfc=false]
.Spamalot
The relevance of the musical "Spamalot" to Internet lore should be
obvious to the reader; but in case of doubt, see also
Section 1 ("What is Spam*?") of RFC2635.

<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-preamble-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC With Preamble (RFC XML v3)</t><sourcecode anchor="_b8b32070-aa50-cb0e-a8cf-6b57f13bac94" type="xml"><![CDATA[<CODE BEGINS>
<abstract>
Unresolved directive in sections/05-preamble.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tags=preamble1]
</abstract>
<CODE ENDS>]]></sourcecode>
</section>
    <section anchor="_sections_and_paragraphs"><name>Sections and Paragraphs</name>

<t anchor="_11f3ff22-f788-2bc5-207a-37295b822ea2">Section headers are given with a sequence of <tt>=</tt>, where the number of
instances of <tt>=</tt> gives the header level.
The document itself opens with a single <tt>=</tt>, and sections within it
must be started with a minimum of <tt>==</tt>.</t>

<t anchor="_ed7dae93-0f40-dd54-6bad-a85e58553766">Section numbering is toggled with the
in-document attribute <tt>:sectnums:</tt> (on), <tt>:sectnums!:</tt> (off). The boolean
<tt>toc</tt> attribute can also be set on sections, indicating whether the
section can be included in the document's table of contents.</t>

<t anchor="_674ea122-e2ae-2a0f-e30d-b82c65dc2d4e"><xref target="source-asciirfc-sections"></xref> shows how sections and paragraphs are
used in AsciiRFC, and its rendered form is shown in
<xref target="source-asciirfc-sections-v3"></xref>.</t>

<t anchor="source-asciirfc-sections" keepWithNext="true">EXAMPLE  1: AsciiRFC With Sections</t><sourcecode anchor="_2c26fd2e-3b33-c971-535e-169b0ce48a33" type="asciidoc"><![CDATA[<CODE BEGINS>

[toc=exclude]
:sectnums!:
== Terminology

The key words "*MUST*", "*MUST NOT*", "*REQUIRED*", "*SHALL*",
"*SHALL NOT*", "*SHOULD*", "*SHOULD NOT*", "*RECOMMENDED*",
"*NOT RECOMMENDED*", "*MAY*", and "*OPTIONAL*" in this document
are to be interpreted as described in BCP 14 <<RFC2119>> <<RFC8174>>
when, and only when, they appear in all capitals, as shown here.

:sectnums:
== Introduction

<<RFC8140>> refers to the intended move of RFC formatting to
XML2RFC v3 <<RFC7990>>, in the following terms:

<CODE ENDS>]]></sourcecode>

<t anchor="source-asciirfc-sections-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC With Sections (RFC XML v3)</t><sourcecode anchor="_afe4f97c-786a-d688-d45e-023a15e81abc" type="xml"><![CDATA[<CODE BEGINS>
Unresolved directive in sections/06-sections.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tags=sectnums1]
<CODE ENDS>]]></sourcecode>

<t anchor="_872e7f10-785e-0708-82d4-1d955df0d85f">Note that skipped sections, such as defining a section using <tt>====</tt>
within a section defined using <tt>==</tt>, is not allowed in AsciiRFC
syntax. Doing so will trigger an error with the following message:</t>

<sourcecode anchor="_10dfc30c-2848-5204-909d-ef9d18822c80" type="console"><![CDATA[asciidoctor: WARNING: _filename_: line _X_:
  section title out of sequence: expected level 2, got level 3]]></sourcecode>

</section>
    <section anchor="figures"><name>Figures</name>

<t anchor="_b35e2733-d7b5-600d-b8ff-8f5dbd78f1db">AsciiRFC examples (corresponding to RFC XML Figures), source code
Listings, and Literals (preformatted text) are all delimited blocks.
Listings and Literals can occur nested within Examples.</t>

<t anchor="_005785a6-2198-15c7-f1ce-8cb0ed4da7cb">An AsciiRFC example with a figure is given in
<xref target="source-asciirfc-figure"></xref>, and its rendering in
<xref target="source-asciirfc-figure-v3"></xref>.</t>

<t anchor="source-asciirfc-figure" keepWithNext="true">EXAMPLE  1: AsciiRFC With A Figure</t><sourcecode anchor="_1e16fbab-37be-3af8-4bac-226efe479671" type="asciidoc"><![CDATA[<CODE>

[[killer-bunny]]
.A Photo Of The Killer Rabbit of Caerbannog Taken In Secret
====
[alt=The Killer Bunny, in ASCII]
....
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\^^^^^^^^^^^^^^^^^^^^^^\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\#MWSHARPMWMWMWTEETHWMWWM>>>\\\\\\\\\\\\
\\\\\\\\\\\\\\\#WMMWMWDEEPMDARKWCAVEMWWMMWM##>>>>\\\\\\\\
\\\\\\\\\\\\\#WMWMWMWMWWM/^MWMWMWMWMWMW^WMWMWMMW#>>>\\\\\\
\\\\\\\\\\\\#WMWMBEASTMW// \MWABBITWMW/ \MWMWMWMW##\\\\\\\
\\\\\\\\\\##MWMWMMWMWMWMWM\\  \MWMWMWMW/  /MWMWMWMWM##\\\\\\
\\\\\\\\##WMWMWMWMMWMWMWMWM\\  \MWMWMW/  /MWMWMWMMWMWMWM##\\
\\\\\\\##MWMMRAVENOUSMWMWMWM\\  \====/  /MWMRABBITMWMWMWMW##
\\\\\\##MWMWMWMWMMWMWMWMWMW[[            ]WMWMWMMWMWMWMWMWMW
\\\\\##MWMWMWMWCARNIVOROUSW[[   3    3   ]MWMWTOOMDARKWMWMMW
\\\\##MWMWDARKMWMWMWMWMWMWM//\     o    /MWMWMWMMWMWMWMMWMWM
\\##MWMWMMKILLERABBITWMWMM//| \___vv___/ \WMPITCHWBLACKWMWMW
\##MWMWMWMMWMWMWMWMWMMWMW// |   \-^^-/   |MWMWMWMMWMWMWMWMWM
MWMWMWMMWMWVERYMDARKWMMW//  |            |MWMCAERBANNOGWMWMW
MWMWMWMMWMWMWMWMWMWMWMM{{  /             /MWMWMMWMWMWMWMWMWM
MULTRADARKWMWMHELPMWMWMW\\ \  |      |  |MWMCANMMWMWMWMMWMWW
MWMWMWMWMMWMWMWMWMMWMWMWM\\ | |_     |  |_WMWMMYOUMWMMWWMWMW
MWMMWMWMWMWMBLACKWMWMWMWWM\_|__-\-----\__-\MWMWMWMREADMWMWWM
MWMWMWMMWMWMWMWMMWMWMWWMWMWMWMMWMWMWMWMWMWMWMWMWMWMWMMTHISWW
MWVERYMMSCARYMWMWWMWMMWMWMWMWMWMWMWMWMWMWMWMWWMWMMWMWIWM'.',
MWMWMMWMW======MWMMCANTWSEEMAMTHINGMMWMWMWMWMWMWMBETMMW` . `
MWMWMWM// SKULL \MWMWMWMMWSCREAMMMWMWMWMMWMNOTMWMWMWW  ` . \
MWMWMW|| |X||X| |MWMWCALLMMEWMMWMWMMWMWMWMWWM - ` ~ . , '
MWMWMW||___ O __|MWMWMWMMWMWMWMWMMW'   ___________//   -_^_-
MWMWMW \\||_|_||MWMW      '   . .     -/>|_|_||_|__|     \O/
MW   \\/\||v v||  -\\-------___     .   .,         \     |
    \\|  \_CHIN/  ==-(|CARROT/)\     \\/||//         v\/||/
       )          /--------^-^            ,.            \|//
 #  \(/ .\\|x//                              " ' '
  . ,                \\||//        \||\\\//   \\
....
====

[[killer-source]]
.C Code To Lure Killer Rabbit Back To Cave
====
[source,c]
----
<CODE>
/* Locate the Killer Rabbit */
int type;
unsigned char *killerRabbit =
  LocateCreature(caerbannog, "killer rabbit");
if( killerRabbit == 0 ){
  puts("The Killer Rabbit of Caerbannog is out of town.");
  return LOST_CREATURE;
}

/* Load Cave */
unsigned char *cave = LoadPlace(,
  "The Cave Of Caerbannog");
if( cave == 0 ){
  puts("The Cave of Caerbannog must have moved.");
  return LOST_PLACE;
}

/* Lure the Killer Rabbit back into the Cave */
unsigned char *carrot = allocateObjectInPlace(
  carrot("fresh"), cave);
if( carrot == 0 ){
  puts("No carrot, no rabbit.");
  return LOST_LURE;
}

/* Finally, notify the Killer Rabbit to act */
return notifyCreature(killerRabbit, carrot);
<CODE>
----
====


<CODE/></CODE></CODE></CODE>]]></sourcecode>

<t anchor="source-asciirfc-figure-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC With A Figure (RFC XML v3)</t><sourcecode anchor="_fb060eae-1692-2ca6-9fc8-6458667557d2" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/07-figures.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=figure1]
CODE ENDS]]></sourcecode>

<t anchor="_1597f555-c55a-b76e-c566-0190ad9fa942">If an AsciiRFC Listing or Literal occurs outside of an Example
(<xref target="source-asciirfc-literal"></xref>), the RFC XML converter will supply the
surrounding Figure element (<xref target="source-asciirfc-literal-v3"></xref>).</t>

<t anchor="source-asciirfc-literal" keepWithNext="true">EXAMPLE  3: AsciiRFC With ASCII Art Without Figure Wrapping</t><sourcecode anchor="_dd1bfb63-4fd9-275d-52b1-436516d1a614" type="asciidoc"><![CDATA[CODE BEGINS

[[hand-grenade-figure]]
.The Holy Hand Grenade of Antioch (don't pull the pin)]]></sourcecode>

<figure anchor="_3f60976c-a0a4-ce42-b453-7386de138fed"><artwork anchor="_4b097c1b-d3f9-a139-dc27-0bf691a1db6f" alt="Holy Hand Grenade of Antioch" type="ascii-art"><![CDATA[                        ______
                       \\/  \/
                      __\\  /__
                     ||  //\   |
                     ||__\\/ __|
                        ||  |    ,---,
                        ||  |====`\  |
                        ||  |    '---'
                      ,--'*`--,
                    _||#|***|#|
                 _,/.-'#|* *|#`-._
               ,,-'#####|   |#####`-.
             ,,'########|   |########`,
            //##########| o |##########\
           ||###########|   |###########|
          ||############| o |############|
          ||------------'   '------------|
          ||o  o  o  o  o   o  o  o  o  o|
           |-----------------------------|
           ||###########################|
            \\#########################/
             `..#####################,'
               ``..###############_,'
                  ``--.._____..--'
                     `''-----''`]]></artwork></figure>

<t anchor="_2b2d9053-a00a-4a5e-2825-b246d264af7e" keepWithNext="true">EXAMPLE  4</t><t anchor="_6c79418e-a85b-ee31-50e8-25613a49c7af">CODE ENDS</t><sourcecode anchor="_f5277a4f-1ad8-d309-5baf-b62d62005d1b"><![CDATA[]]></sourcecode>

<t anchor="source-asciirfc-literal-v3" keepWithNext="true">EXAMPLE  5: AsciiRFC With ASCII Art Without Figure Wrapping (RFC XML v3)</t><sourcecode anchor="_8fed678a-9869-a80e-9e17-0adc5cfa0a0a" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/07-figures.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=figure2]
CODE ENDS]]></sourcecode>
</section>
    <section anchor="lists"><name>Lists</name>

<section anchor="_basic_lists"><name>Basic Lists</name>

<t anchor="_17815774-2c7c-3314-8c3c-5fee18f8bebc">AsciiRFC supports ordered, unordered, and definition lists.
Indentation of ordered and unordered lists is indicated by repeating
the list item prefix (<tt>*</tt> and <tt>.</tt> respectively); for definition
lists, it is indicated by incrementing the number of definition term delimiters
(<tt>::</tt>).</t>

<t anchor="_4a32b83d-9d3e-14a0-39c9-8e8524895a17">List attributes can be used to specify the type of symbol used for
ordered lists.</t>

<t anchor="_3f21e943-8a33-0d53-e67b-2b1e7cdcb68d">An example of an unordered list is shown in
<xref target="source-asciirfc-unordered-list"></xref> (with its rendered version in
<xref target="source-asciirfc-unordered-list-v3"></xref>). An example of an ordered list
with ordered and unordered sublists is
shown in <xref target="source-asciirfc-ordered-list"></xref> (with its rendered version
in <xref target="source-asciirfc-ordered-list-v3"></xref>). An example of a definition
list is shown in <xref target="source-asciirfc-definition-list"></xref> (with its
rendered version in <xref target="source-asciirfc-definition-list-v3"></xref>).</t>

<t anchor="source-asciirfc-unordered-list" keepWithNext="true">EXAMPLE  1: AsciiRFC With Unordered lists</t><sourcecode anchor="_304ea8e1-c3f9-fa2f-e5fc-f8fa2fedf395" type="asciidoc"><![CDATA[CODE BEGINS

* Killed
** Sir Bors
** Sir Gawain
** Sir Ector
* Soiled Himself
** Sir Robin
* Panicked
** King Arthur
* Employed Ordnance
** The Lector
** Brother Maynard
* Scoffed
** Tim the Enchanter

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-unordered-list-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC With Unordered Lists (RFC XML v3)</t><sourcecode anchor="_b577d743-92fd-ec4f-9a73-4e1d5bd74d81" type="asciidoc"><![CDATA[CODE BEGINS
Unresolved directive in sections/08-lists.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=ul1]
CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-ordered-list" keepWithNext="true">EXAMPLE  3: AsciiRFC With Ordered lists</t><sourcecode anchor="_41fcf4a7-7a8d-9892-a51c-50daa30de25f" type="asciidoc"><![CDATA[CODE BEGINS

. Preamble: St Attila Benediction
. Feast of the People on Sundry Foods
** Lambs
** Sloths
** Carp
** Anchovies
** Orangutangs
** Breakfast Cereals
** Fruit Bats
** _et hoc genus omne_
. Take out the Holy Pin
. The Count
[upperalpha]
.. Count is to Three: no more, no less
.. Not Four
.. Nor Two, except if the count then proceeds to Three
.. Five is Right Out
. Lob the Holy Hand Grenade of Antioch towards the Foe
. The Foe, being naughty in the *LORD's* sight, [bcp14]#shall# snuff it

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-ordered-list-v3" keepWithNext="true">EXAMPLE  4: AsciiRFC With Ordered Lists (RFC XML v3)</t><sourcecode anchor="_cf48d9ab-f3c1-7d03-5717-408c4ed746b7" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/08-lists.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=ol1]
CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-definition-list" keepWithNext="true">EXAMPLE  5: AsciiRFC With Definition lists</t><sourcecode anchor="_c5c31619-cd1e-49cb-4565-ec2b28c7f7d4" type="asciidoc"><![CDATA[CODE BEGINS

Holy Hand Grenade of Antioch::
  Ordnance deployed by Brother Maynard under the incantation of a
  lector, in order to dispense with the Foes of the Virtuous.
  See hand-grenade-figure.

Holy Spear of Antioch::
  A supposed relic of the crucifixion of Jesus Christ, this is one
  of at least four claimed instances of the lance that pierced
  Christ's side. Its historical significance lies in inspiring
  crusaders to continue their siege of Antioch in 1098.

Sovereign's Orb of the United Kingdom::
  Part of the Crown Jewels of the United Kingdom, the Sovereign's
  Orb is a hollow gold sphere set with jewels and topped with a
  cross.  It was made for Charles II in 1661. See sovereign-orb.

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-definition-list-v3" keepWithNext="true">EXAMPLE  6: AsciiRFC With Definition Lists (RFC XML v3)</t><sourcecode anchor="_97c11bd9-a205-d48c-ccb8-8027ecf5d71e" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/08-lists.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=dl1]
CODE ENDS]]></sourcecode>
</section>

<section anchor="_list_continuation"><name>List Continuation</name>

<t anchor="_da3a9e30-05a1-e557-8f1b-a6fbad4be4f6">A list item by default spans a single paragraph. A following paragraph
or other block element can be appended to the current list item by
prefixing it with <tt>+</tt> in a separate line.</t>

<t anchor="_fa64758e-2026-f2b7-65c6-1afbc8bbce60">See the "List Continuation" section in <xref target="Asciidoctor-Manual"></xref> for more
information.</t>

<t anchor="_720be009-8342-6b29-320b-2d2b3eb5e79e">An example of list continuation with text is shown in
<xref target="source-asciirfc-list-text"></xref> with its rendered version in
<xref target="source-asciirfc-list-text-v3"></xref>.</t>

<t anchor="source-asciirfc-list-text" keepWithNext="true">EXAMPLE  1: AsciiRFC List With Text Continuation</t><sourcecode anchor="_aafc4242-bc6a-0fc6-cbe0-6115c10bf7ed" type="asciidoc"><![CDATA[CODE BEGINS

Trojan Rabbit::
In their siege of the French-occupied castle which may already
contain an instance of the Grail, Sir Bedevere the Wise proposes to
use a Trojan Rabbit to infiltrate the castle, with a raiding party
to take the French "not only by surprise, but totally unarmed."
+
The proposal, unsurprisingly, proved abortive. The more so as the
raiding party forgot to hide within the Trojan Rabbit, before the
French soldiers took the Trojan Rabbit inside the castle.

Killer Rabbit of Caerbannog::
Guarding the entrance to the Cave of Caerbannog; see caerbannog.

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-list-text-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC List With Text Continuation (RFC XML v3)</t><sourcecode anchor="_9f1f8a90-7972-1bba-be0c-c12916d6015e" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/08-lists.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=listcontinuation1]
CODE ENDS]]></sourcecode>

<t anchor="_6c35f38b-b84f-bd9c-ab0d-02eee3c0ac55">(Multiple paragraphs are not permitted within a list item in RFC XML
v2.  The RFC XML converter deals with this by converting paragraph
breaks into line breaks within a list item.)</t>

<t anchor="_2e580e57-a5d1-2b73-a9a0-5313048badf7">List continuations can also be embedded to populate a list item with a
sequence of blocks as a unit (in an Asciidoctor syntax open block).</t>

<t anchor="_05c62def-9264-f700-28ca-25964e59d925">An example of list continuation with a delimited block is shown in
<xref target="source-asciirfc-list-block"></xref> with its rendered version in
<xref target="source-asciirfc-list-block-v3"></xref>.</t>

<t anchor="source-asciirfc-list-block" keepWithNext="true">EXAMPLE  3: AsciiRFC List With Block Continuation</t><sourcecode anchor="_c42d5f98-55a4-835d-4f83-b24486f6f8f6" type="asciidoc"><![CDATA[CODE BEGINS

. Take out the Holy Pin
. The Count
+
----
integer count;
for count := 1 step 1 until 3 do
  say(count)
comment Five is Right Out
----
. Lob the Holy Hand Grenade of Antioch towards the Foe
. Foe snuffs it

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-list-block-v3" keepWithNext="true">EXAMPLE  4: AsciiRFC List With Block Continuation (RFC XML v3)</t><sourcecode anchor="_69c07cd0-da1d-c2c8-f78e-444dc7aade10" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/08-lists.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=listcontinuationblock1]
CODE ENDS]]></sourcecode>

<t anchor="_91f5b8a3-4722-f51c-e4c6-b26029b7b4d4">AsciiDoc, and thus AsciiRFC, considers paragraphs to be the basic
level of blocks, and does not permit lists to be nested within them:
any text after a list is considered to be a new paragraph.</t>

<t anchor="_04ee09af-5b4b-b80b-d0ff-c35b59d6cad2">Therefore, markup as shown in <xref target="source-asciirfc-list-impossible"></xref>
cannot be generated via AsciiRFC.</t>

<t anchor="source-asciirfc-list-impossible" keepWithNext="true">EXAMPLE  5: This RFC XML v3 Output Cannot Be Generated Using AsciiRFC</t><sourcecode anchor="_d41029bb-dfa8-b6fa-5707-7967c13510be" type="xml"><![CDATA[CODE BEGINS
t
  This is the start of a paragraph.
  ul
    liList Entry 1/li
    li
      tList Entry 2/t
      tNote 2./t
    /li
  /ul
  And this is the continuation of the paragraph.
/t
CODE ENDS]]></sourcecode>
</section>
</section>
    <section anchor="_blockquotes"><name>Blockquotes</name>

<t anchor="_c04f8069-5a7b-a773-af83-bff158a99cb7">Asciidoctor syntax supports blockquotes and quotations of verse; its
block quotations permit arbitrary levels of quote nesting.  RFC XML
v3, and thus AsciiRFC, only supports one level of blockquotes.</t>

<t anchor="_47e9a8c4-16b2-4316-c316-365e0aa8141c">Unlike RFC XML v2, RFC XML v3 does not support line breaks outside of
tables, so verse quotations are converted to prose in the v3
converter.</t>

<t anchor="_23100f68-2b3e-d4df-f790-191ec55d5573">An example of using AsciiRFC Blockquotes is given in
<xref target="source-asciirfc-blockquotes"></xref> with its rendered version in
<xref target="source-asciirfc-blockquotes-v3"></xref>.</t>

<t anchor="source-asciirfc-blockquotes" keepWithNext="true">EXAMPLE  1: AsciiRFC Blockquote Usage</t><sourcecode anchor="_bdff0a4c-b6f1-7f50-c0bf-dd9318dd9523" type="asciidoc"><![CDATA[CODE BEGINS

[quote,attribution="A. Farrel"]
____
Although the RFC Editor has recently dragged the IETF kicking and
screaming into the twentieth century [RFC7990] [RFC7996], there is a
yearning among all right-thinking Internet architects to "keep it
simple" and to return to the olden days when pigs could be given
thrust without anyone taking undue offence.
____

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-blockquotes-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC Blockquote Usage (RFC XML v3)</t><sourcecode anchor="_57cdcc09-7173-6815-a60c-0d4d74b3f79f" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/09-blockquotes.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=quote1]
CODE ENDS]]></sourcecode>
</section>
    <section anchor="_notes_and_asides"><name>Notes And Asides</name>

<t anchor="_83725f0f-759f-2e8e-662d-eea67bc0d720">Asciidoctor syntax supports a range of "admonitions", including notes,
warnings, and tips. They are indicated by a paragraph prefix (e.g.
<tt>WARNING:</tt>), or as a block with an admonition style attribute.</t>

<t anchor="_9fda018f-79cf-1b83-f34f-b5098264f50f">All admonitions are conflated in AsciiRFC, being converted to <tt>note</tt>
elements in the document preamble, and <tt>cref</tt> elements in the main
document.</t>

<t anchor="_9256cfee-5227-a2c7-cf0c-ebffe84bdeea">This means that no admonitions will therefore appear in the
textual output, unless forced to through the <tt>comments</tt> processing
instruction. A sample admonition is shown in <xref target="source-asciirfc-note"></xref>,
with its rendered output in <xref target="source-asciirfc-note-v3"></xref>.</t>

<t anchor="source-asciirfc-note" keepWithNext="true">EXAMPLE  1: An AsciiRFC Adminition Block</t><sourcecode anchor="_08c6586a-a2b0-2c62-fbbe-c33a6e931e1f" type="asciidoc"><![CDATA[CODE BEGINS

[NOTE,display=true,source=Author]
====
Image courtesy of
https://camelot.gov.example/creatures-in-ascii/
====

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-note-v3" keepWithNext="true">EXAMPLE  2: An AsciiRFC Adminition Block (RFC XML v3)</t><sourcecode anchor="_e03f0750-15b3-9f52-7bf8-7d1707e8634a" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/10-notes.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=note1]
CODE ENDS]]></sourcecode>

<t anchor="_5272bfdd-a3a4-a084-2d03-db67b25aa11b">With RFC XML v2, note that no inline formatting is permitted for
<tt>cref</tt> elements, and any such formatting is therefore stripped
for v2 by the converter.</t>

<t anchor="_dfcde8fe-1cf2-03bf-62da-bb93db6f1080">Because paragraphs in AsciiRFC cannot contain any other blocks, a
comment at the end of a paragraph is treated as a new block. In the
document converter, any such comments are moved inside the preceding
RFC XML paragraph; if the comment is at the start of a section, as in
the example above, it is wrapped inside a paragraph.</t>

<t anchor="_2626440e-646c-1e1b-3abf-356a52ba4052">The RFC XML v3 converter also supports <tt>asides</tt> (Asciidoctor syntax
Sidebars). A sample is shown in <xref target="source-asciirfc-sidebar"></xref>, with its
rendered output in <xref target="source-asciirfc-sidebar-v3"></xref>.</t>

<t anchor="source-asciirfc-sidebar" keepWithNext="true">EXAMPLE  3: An AsciiRFC Sidebar Block</t><sourcecode anchor="_b0d02572-19b4-091b-8edf-1a5435a5a724" type="asciidoc"><![CDATA[CODE BEGINS

****
While the exchange at the French-occupied castle is one of
the more memorable scenes of _Monty Python and the Holy Grail_,
the Trojan Rabbit has not reached the same level of cultural
resonance as its more murderous counterpart. Reasons for this
may include:

* Less overall screen-time dedicated to the Trojan Rabbit.

* The Trojan Rabbit as projectile has already been anticipated
by the Cow as projectile.
****

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-sidebar-v3" keepWithNext="true">EXAMPLE  4: An AsciiRFC Sidebar Block Rendered As An Aside (RFC XML v3)</t><sourcecode anchor="_e35f9079-e687-0893-82ee-39e384223c6e" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/10-notes.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=aside1]
CODE ENDS]]></sourcecode>

<t anchor="_750bfd88-2517-660f-c5c8-e04d0670f1f4">Comments given in AsciiDoc syntax (notated with initial <tt>//</tt>) are
not intended to be shown in the rendered output, and will not appear
in the output as XML comments. XML comments can be generated by using
the <tt>[comment]#...#</tt> inline formatting macro, or the <tt>[.comment]</tt> role
attribute on blocks. A sample is shown in <xref target="source-asciirfc-sidebar"></xref> with its
rendered output in <xref target="source-asciirfc-sidebar-v3"></xref>.</t>

<t anchor="source-asciirfc-comment" keepWithNext="true">EXAMPLE  5: AsciiRFC delimited text intended as an XML Comment</t><sourcecode anchor="_5d26e853-0a43-1bef-8af6-af559e022493" type="asciidoc"><![CDATA[CODE BEGINS

The exchange of projectile animals was the beginning of a
long-running fruitful relationship between the British and the
French peoples,
[comment]#TODO: Will need to verify that claim.# which
arguably predates the traditional English enmity with the
French. [comment]#Strictly speaking, the Knights are Welsh.#

[.comment]
--
This document, as it turns out, has a profusion of XML comments.

As expected, they are ignored in any rendering of the document.
--


CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-comment-v3" keepWithNext="true">EXAMPLE  6: AsciiRFC delimited text Rendered As An XML Comment (RFC XML v3)</t><sourcecode anchor="_7c8fac36-9a73-bfff-e65e-21dded81bfb4" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/10-notes.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=comment1]
CODE ENDS]]></sourcecode>
</section>
    <section anchor="_tables"><name>Tables</name>

<t anchor="_25f3b66d-8cb0-6b56-182a-acb40a8dded5">AsciiRFC tables, like RFC XML v3, support distinct table heads, bodies
and feet; cells spanning multiple rows and columns; and horizontal
alignment. The larger range of table formatting options available in
RFC XML v2 is also supported.</t>

<t anchor="_aa33706b-de6f-8ca4-3440-4c023cbf4b1e">A sample of an AsciiRFC table is shown in <xref target="source-asciirfc-table"></xref>,
with its rendered output in <xref target="source-asciirfc-table-v3"></xref>.</t>

<t anchor="_00cc9c3d-f6d6-91cd-2f71-767a50165a12">Neither version of RFC XML is as expressive in its table structure as
Asciidoctor syntax. RFC XML, for example, does not permit blocks
within table cells.</t>

<t anchor="source-asciirfc-table" keepWithNext="true">EXAMPLE  1: An AsciiRFC Table</t><sourcecode anchor="_e0143a90-ae90-a394-ea73-30527855d32e" type="asciidoc"><![CDATA[CODE BEGINS

[grid=all,options="footer"]
|===
|French Castle | Cave of Caerbannog

2+|King Arthur
2+|Patsy
2+|Sir Bedevere the Wise
2+|Sir Galahad the Pure
2+|Sir Lancelot the Brave
2+|Sir Robin the Not-quite-so-brave-as-Sir-Lancelot
|French Guard with Outrageous Accent| Tim the Enchanter
|Other French Guards | Brother Maynard
| | The Lector
.3+^|not yet recruited
|Sir Bors
|Sir Gawain
|Sir Ector

|Retinue of sundry knights
|Retinue of sundry more knights than at the French Castle
|===

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-table-v3" keepWithNext="true">EXAMPLE  2: An AsciiRFC Table (RFC XML v3)</t><sourcecode anchor="_05093750-9b09-8518-365a-347d244e7a6d" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/11-tables.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=table1]
CODE ENDS]]></sourcecode>
</section>
    <section anchor="_inline_formatting"><name>Inline Formatting</name>

<section anchor="_italics_boldface_monospace_subscripts_superscripts"><name>Italics, Boldface, Monospace, Subscripts, Superscripts</name>

<t anchor="_709e502e-1007-0412-b578-a949faa5407c">AsciiRFC supports italics, boldface, monospace, subscripts and
superscripts, just like RFC XML v3.</t>

<t anchor="_c890886d-fff6-e405-b3b7-436e9dfb9e47">The inline formatting syntax given in <xref target="source-asciirfc-inline"></xref>
produces the RFC XML v3 output given in <xref target="source-asciirfc-inline-v3"></xref>.</t>

<t anchor="source-asciirfc-inline" keepWithNext="true">EXAMPLE  1: Inline Formatting In AsciiRFC</t><sourcecode anchor="_2eb346b5-f620-d235-cd2d-1bc4d4cc47fa" type="asciidoc"><![CDATA[CODE BEGINS

The participants of that renowned exercise in cross-cultural
communication, to wit the exchange between the
_Knights of the Round Table_
and the taunting French soldiers serving under *Guy de Lombard* are,
properly speaking, outside the scope of this `menagerie`, being more
or less human. Notwithstanding, several^ish^ beasts both animate~d~
and wooden played a significant part in this encounter; most
notably:

* The Projectile Cow, see projectile-cow
* The Trojan Rabbit, see trojan-rabbit

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-inline-v3" keepWithNext="true">EXAMPLE  2: Inline Formatting In AsciiRFC (RFC XML v3)</t><sourcecode anchor="_a5a8d477-0253-2d3a-b6a3-ebb4fe711aa1" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/12-inline.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=inline_formatting1]
CODE ENDS]]></sourcecode>
</section>

<section anchor="_formatting_bcp_14_keywords"><name>Formatting BCP 14 Keywords</name>

<t anchor="_6b884f63-ca71-c674-8aa9-6abc5ed74202">RFC XML v3 also supports tagging of BCP14 keywords <xref target="RFC2119"></xref>
<xref target="RFC8174"></xref>; this is done in AsciiRFC either by tagging them with a
custom formatting span (e.g. <tt><bcp14>MUST NOT</bcp14></tt>), or by converting
any boldface all-caps words recognised as BCP14 words (unless the
<tt>:no-rfc-bold-bcp14: false</tt> document attribute is set).</t>

<t anchor="_1035b5b7-ecb4-37d9-4fe6-f59d8e339e68">Any spans of BCP14 text delimited by inline formatting delimiters
need to be contained within a single line of text; in Asciidoctor
syntax, formatting spans are broken up across line breaks.</t>

<t anchor="_bc5c3377-cafd-7e8a-6dee-1c2605fa65d8">This usage is demonstrated in <xref target="source-asciirfc-bcp14"></xref> with the
rendered output in <xref target="source-asciirfc-bcp14-v3"></xref>.</t>

<t anchor="source-asciirfc-bcp14" keepWithNext="true">EXAMPLE  1: BCP14 Keywords In AsciiRFC</t><sourcecode anchor="_33368e9f-e9de-9be3-de8f-b85663c2a93c" type="asciidoc"><![CDATA[CODE BEGINS

The instructions in the _Book of Armaments_ on the proper deployment
of the Holy Hand Grenade of Antioch [bcp14]#may# be summarized as
follows, although this summary *SHALL NOT* be used as a substitute
for a reading from the Book of Armaments:

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-bcp14-v3" keepWithNext="true">EXAMPLE  2: BCP14 Keywords In AsciiRFC (RFC XML v3)</t><sourcecode anchor="_7d64a63a-534d-5ef4-73d0-cca49809d64a" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/12-inline.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=bcp14_1]
CODE ENDS]]></sourcecode>
</section>

<section anchor="_escaping_asciirfc_syntax"><name>Escaping AsciiRFC Syntax</name>

<t anchor="_03f48047-9580-0734-63e9-708585369cef">Formatting delimiters like <tt>*</tt> can be escaped with backslash (<tt>\*</tt>);
double formatting delimiters, like <tt>**</tt> and <tt>__</tt>, need to be
escaped with double backslash (<tt>\\**</tt>).</t>

<t anchor="_78f40d4f-338e-b1c8-5a37-e358a8cd241d">Escaping delimiters is not always reliable, and for double delimiters
it is preferable to use HTML entities (<tt>**</tt>), or attribute
references (references to the value of attributes set in the document
header) as shown in <xref target="source-asciirfc-escaping"></xref>.</t>

<t anchor="source-asciirfc-escaping" keepWithNext="true">EXAMPLE: Escaping AsciiRFC Syntax Using Attributes</t><sourcecode anchor="_b5c320cc-44ac-f314-91e4-fb9020746c27" type="asciidoc"><![CDATA[CODE BEGINS
:dblast: **

`{dblast}`
CODE ENDS]]></sourcecode>

<t anchor="_a6ac4b79-0c31-88a4-34f0-52bb98c67315">In extreme circumstances (such as quoting AsciiDoc syntax), you may
need to resort to altering the substitutions behaviour within a given
block of of AsciiDoc; see the "Applying Substitutions" section of
<xref target="Asciidoctor-Manual"></xref>.</t>
</section>
</section>
    <section anchor="_links"><name>Links</name>

<t anchor="_dd3f1107-7490-4d2a-0578-7a3d5ca80e67">Common URL formats are recognised automatically as hyperlinks in
AsciiRFC, which inherits this excellent feature from AsciiDoc, and are
rendered as such.</t>

<t anchor="_9248e00e-dec5-e482-20a2-f7560a16899f">Any hyperlinked text is appended after the hyperlink in square
brackets.</t>

<t anchor="_56812ebb-3684-d9c5-43c4-fde2c1338507">An example is given in <xref target="source-asciirfc-link"></xref> with its rendered
version in <xref target="source-asciirfc-link-v3"></xref>.</t>

<t anchor="source-asciirfc-link" keepWithNext="true">EXAMPLE  1: An AsciiRFC Link</t><sourcecode anchor="_d4840303-b181-d77d-3155-5ede48ae79bd" type="asciidoc"><![CDATA[CODE BEGINS

killer-bunny,The following depiction of the fearsome beast
has been sourced from
http://camelot.gov.example/avatars/rabbit[Rabbit-SCII],
killer-source,accompanied
by C code that was used in this accurate depiction of the
Killer Rabbit:

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-link-v3" keepWithNext="true">EXAMPLE  2: An AsciiRFC Link (RFC XML v3)</t><sourcecode anchor="_51076578-eec7-cd5e-929e-7a412e4c01e5" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/13-links.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=hyperlink1]
CODE ENDS]]></sourcecode>

<t anchor="_38508311-8b11-e733-0e3b-15e6d77659ad">To prevent hyperlinking of a URL, prefix it with a backslash, as shown
in <xref target="source-asciirfc-link-lit"></xref> with its rendered version in
<xref target="source-asciirfc-link-lit-v3"></xref>.</t>

<t anchor="source-asciirfc-link-lit" keepWithNext="true">EXAMPLE  3: A Literal AsciiRFC Link</t><sourcecode anchor="_c686e725-c78f-9e46-a965-2868ec94b801" type="asciidoc"><![CDATA[CODE BEGINS

The screaming move into the twenty-*first* century is accompanied by
a move back to the late twentieth century, with ASCII stylings more
wonted in haunts like \ftp://ftp.wwa.com/pub/Scarecrow (known to be
accessible in 1996.)

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-link-lit-v3" keepWithNext="true">EXAMPLE  4: A Literal AsciiRFC Link (RFC XML v3)</t><sourcecode anchor="_ab8acf83-ba86-f2ec-9e1f-0e9c4a733f67" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/13-links.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=escaped_hyperlink1]
CODE ENDS]]></sourcecode>
</section>
    <section anchor="cross-references"><name>Cross-References</name>

<section anchor="_basic_referencing"><name>Basic Referencing</name>

<t anchor="_d06a0039-dbf7-437c-9a7e-99b2fa44e5dc">Anchors for cross-references are notated as <tt>[[...]]</tt> or <tt>[#...]</tt>, and
can be inserted on their own line in front of most blocks.</t>

<t anchor="_dce30f13-861f-f2ca-6a2a-f7117f4cfa9c">Asciidoctor syntax supports anchors in a much wider range of contexts
than is supported than RFC XML v3 (let alone v2); anchors that are not
supported for that version of RFC XML are simply ignored by the
converter.</t>

<t anchor="_63d9f6db-ffac-f460-6a02-e72c5385c607">Note that anchors in RFC XML are constrained to the format
<tt>[A-Za-z_:][[A-Za-z0-9_:.-]*</tt> (i.e. <tt>xsd:ID</tt>).</t>

<t anchor="_bcdfc0c3-286f-7a4a-571c-3c286b1c0e3d">Cross-references to anchors are notated as <tt>...</tt>; cross-references
with custom text as <tt><t><reference></reference></t>,text</tt>.</t>

<t anchor="_8abfb579-c26c-caee-cc5b-717017298874">An example of using cross-references in AsciiRFC is given in
<xref target="source-asciirfc-xref"></xref> with its rendered output in
<xref target="source-asciirfc-xref-v3"></xref>.</t>

<t anchor="source-asciirfc-xref" keepWithNext="true">EXAMPLE  1: Setting And Referring To Cross-References In AsciiRFC</t><sourcecode anchor="_0beb9887-9044-558f-b56f-380701e4ce53" type="asciidoc"><![CDATA[CODE BEGINS

The _Cave of Caerbannog_ has been well-established in the mythology
of Camelot (as recounted by Monty Python) as the lair of the
Legendary Black Beast of Arrrghhh, more commonly known today as the
*Killer Rabbit of Caerbannog* killer_rabbit_caerbannog.
It is the encounter between the Killer Rabbit of Caerbannog and the
Knights of the Round Table, armed with the Holy Hand Grenade of
Antioch (see the holy_hand_grenade,following section), that we
recount here through monospace font and multiple spaces.

[[killer_rabbit_caerbannog]]
=== The Killer Rabbit of Caerbannog

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-xref-v3" keepWithNext="true">EXAMPLE  2: Setting And Referring To Cross-References In AsciiRFC (RFC XML v3)</t><sourcecode anchor="_8831d442-8f02-5d13-b236-63bffb45871b" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/14-xref.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=xref1]
CODE ENDS]]></sourcecode>
</section>

<section anchor="_referencing_with_attributes"><name>Referencing With Attributes</name>

<t anchor="_c6704e3b-74d9-6ecc-a5ea-a76264bbc62c">While Asciidoctor syntax natively does not support attributes on
cross-references, AsciiRFC works around that by embedding formatting
information as templated text within cross-references:</t>

<ul anchor="_560c4d04-a9fd-031f-d8b1-fc46506b12b9"><li><tt>format=x: text</tt> populates the <tt>xref@format</tt> attribute</li>
<li>a section number followed by one of the words <tt>of</tt>, <tt>parens</tt>,
<tt>bare</tt>, <tt>text</tt> is treated as a <tt>relref</tt> reference to an external
document.</li>
</ul>

<t anchor="_d1d27f14-7f7c-8a23-e2d9-4dec04dfee50">An example of referencing with attributes is given in
<xref target="source-asciirfc-xref-att"></xref> with its output in
<xref target="source-asciirfc-xref-att-v3"></xref>.</t>

<t anchor="source-asciirfc-xref-att" keepWithNext="true">EXAMPLE  1: Cross-References With Attributes In AsciiRFC</t><sourcecode anchor="_aab89909-babb-0344-6cae-2ebf1d01d137" type="asciidoc"><![CDATA[CODE BEGINS

The *Killer Rabbit of Caerbannog*, that most formidable foe of
the Knights and of all that is holy or carrot-like, has been
depicted diversely in lay and in song. We venture to say,
_contra_ the claim made in RFC8140,4.1 of: Ze Vompyre,
that the Killer Rabbit of Caerbannog truly is the most afeared
of all the creatures. Short of sanctified ordnance such as
holy_hand_grenade,format=title, there are few remedies
known against its awful lapine powers.

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-xref-att-v3" keepWithNext="true">EXAMPLE  2: Cross-References With Attributes In AsciiRFC (RFC XML v3)</t><sourcecode anchor="_8956e8d5-8173-8271-d34d-f38852d6eb08" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/14-xref.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=relref1]
CODE ENDS]]></sourcecode>
</section>

<section anchor="_indexing"><name>Indexing</name>

<t anchor="_85c1343b-a16b-5b22-2ab4-eb0ded5b92ee">Inline index entries are notated as <tt>((...))</tt>. Index entries
which do not appear in the text are notated as <tt>(...<iref item="..."></iref>)</tt>;
such entries may include a separate sub-entry, separated from
the main entry by comma.</t>

<t anchor="source-asciirfc-index" keepWithNext="true">EXAMPLE  1: AsciiRFC Index Entries</t><sourcecode anchor="_f5aafd24-c0a9-6fba-eeb0-3feeda339a9b" type="asciidoc"><![CDATA[CODE BEGINS

The solution to the impasse at the ((Cave of Caerbannog)) was
provided by the successful deployment of the
*Holy Hand Grenade of Antioch* (see hand-grenade-figure)
(((Holy Hand Grenade of Antioch))).
Any similarity between the Holy Hand Grenade of Antioch and the
mythical _Holy Spear of Antioch_ is purely intentional;
(((relics, Christian))) any similarity between the Holy Hand Grenade
of Antioch and the _Sovereign's Orb of the United Kingdom_
(see sovereign-orb) is putatively fortuitous.
(((relics, monarchic)))

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-index-v3" keepWithNext="true">EXAMPLE  2: AsciiRFC Index Entries (RFC XML v3)</t><sourcecode anchor="_dd2c4de3-5f77-3fbd-dd80-e6c3a3f89352" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/14-xref.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=index1]
CODE ENDS]]></sourcecode>
</section>
</section>
    <section anchor="_inclusions"><name>Inclusions</name>

<t anchor="_cfa2329a-4935-5f2b-5977-093330379948">AsciiRFC inherits the Asciidoctor syntax "include" directive
<xref target="Asciidoctor-Manual"></xref> to include external files in a master AsciiRFC
document.</t>

<t anchor="_7b5ceaf3-897a-0123-f26d-aff6ddefe102">This directive is capable of sophisticated document merging, including
adjusting the heading levels of the included text, selecting text
within specified tags or line numbers to be included, and adjusting
the indentation of code snippets in merged text.</t>

<t anchor="_1467316d-5078-292b-63b5-bd7e290b87bc">Its basic syntax is given in <xref target="source-asciirfc-include"></xref>.</t>

<t anchor="source-asciirfc-include" keepWithNext="true">EXAMPLE: Inclusions In AsciiRFC</t><sourcecode anchor="_b48aff0e-b28e-6b05-d815-efa2d6200ab1" type="asciidoc"><![CDATA[CODE BEGINS
include::path[
  leveloffset=_offset_,
  lines=_ranges_,
  tag(s)=_name(s)_,
  indent=_depth_
]
CODE ENDS]]></sourcecode>

<t anchor="_c7be23b7-83a3-6bc4-c62d-dccfe3435d41">If a file is included in an AsciiRFC document, ensure it ends with a
blank line.  An inclusion that results in its final block not being
delimited with a blank line from what follows can lead to
unpredictable results.</t>
</section>
    <section anchor="encoding"><name>Encoding and Entities</name>

<t anchor="_f6c20003-e269-265f-4231-e01ae3bb400d">XML accepts the full range of characters in the world's languages
through UTF-8 character encoding, and one of the motivations for the
move by the IETF from plain text to RFC XML has been to allow
non-ASCII characters to be included in RFCs.</t>

<t anchor="_e0570415-a7f4-d6d0-6cbb-c7b8f888c460">However, current RFC XML v2 tools still do not support UTF-8, and
alternative tooling support for UTF-8 also remains patchy. Out of an
abundance of caution, the RFC XML converter uses US-ASCII for its
character encoding, and renders any non-ASCII characters as HTML
entities.</t>

<t anchor="_178b18ee-e097-b732-4da8-d6e5e8772aa7">AsciiRFC accepts HTML entities as input, even though they are not part
of the W3C XML specification. HTML entities such as <tt>&#xA0;</tt> feature in
examples of RFC XML provided by the IETF. In order to prevent
dependence of the XML output from extraneous entity definitions, any
such entities are rendered in the XML as decimal character entities.</t>

<t anchor="_4849ddbc-511a-4ca2-408d-1778f86790a6">An example of how AsciiRFC renders non-ASCII UTF-8 characters
are given in <xref target="source-asciirfc-enc"></xref> with the output in
<xref target="source-asciirfc-enc-v3"></xref>.</t>

<t anchor="source-asciirfc-enc" keepWithNext="true">EXAMPLE  1: UTF-8 Characters In AsciiRFC</t><sourcecode anchor="_87fd3455-855b-24a5-6bdb-64734bbe2772" type="asciidoc"><![CDATA[CODE BEGINS

____
#x2e;כאן אולי ימצאו המילים האחרונות של יוסף מארמתיה
#x2e;מי אשר יהיה אמיץ ובעל נפש טהורה יוכל למצוא את הגביע הקדוש בטירת אאאאאאאה

"Here may be found the last words of Joseph#xa0;of Arimathea.
He who is valiant and pure of spirit may find the Holy Grail
in the castle of #x2014; Aaaargh."
____

CODE ENDS]]></sourcecode>

<t anchor="source-asciirfc-enc-v3" keepWithNext="true">EXAMPLE  2: UTF-8 Characters In AsciiRFC Rendered As RFC XML v3</t><sourcecode anchor="_a63c37c6-0feb-3d22-4afa-c06bc1e5d8fc" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/16-encoding.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=hebrew1]
CODE ENDS]]></sourcecode>

<t anchor="_9a94711e-c3e8-326b-8146-e6b32c7e2707">Note that because initial period is a formatting character in Asciidoctor,
we have had to use <tt>.</tt> to escape the period at the end of Hebrew sentences (which appears
at the start of the line, Hebrew being written Right-to-Left). Asciidoctor is
not natively equipped to deal with Right-to-Left languages in its formatting
parsing.</t>
</section>
    <section anchor="_rfc_xml_features_not_supported_in_asciidoctor"><name>RFC XML features not supported in Asciidoctor</name>

<t anchor="_d7ea95da-0e56-2585-44c0-17213e6511bc">The following features of RFC XML v3 <xref target="RFC7991"></xref> and v2 <xref target="RFC7749"></xref> are not
supported by the AsciiRFC converter, and would need to be adjusted manually
after RFC XML is generated:</t>

<table anchor="_00c9d5bc-1cf4-dd9b-8eba-3af07aaa9638"><thead><tr><th align="left">RFC XML element</th><th align="left">RFC XML v3</th><th align="left">RFC XML v2</th></tr></thead><tbody><tr><td align="left"><tt>front/boilerplate</tt></td><td align="left">Not added by the converter</td><td align="left">Not added by the converter</td></tr><tr><td align="left"><tt>iref@primary</tt></td><td align="left">N</td><td align="left">N</td></tr><tr><td align="left"><tt>reference</tt> (and all children)</td><td align="left">As Raw XML</td><td align="left">As Raw XML</td></tr><tr><td align="left"><tt>table/preamble</tt></td><td align="left">Deprecated</td><td align="left">N</td></tr><tr><td align="left"><tt>table/postamble</tt></td><td align="left">Deprecated</td><td align="left">N</td></tr><tr><td align="left"><tt>artwork@width</tt></td><td align="left">Only on images</td><td align="left">Only on images</td></tr><tr><td align="left"><tt>artwork@height</tt></td><td align="left">Only on images</td><td align="left">Only on images</td></tr></tbody></table>
</section>
    <section anchor="_authoring"><name>Authoring</name>

<t anchor="_464402ee-245a-bac4-bd83-d8a3745eb885">To author an AsciiRFC document, you should first familiarise yourself
with the <xref target="Asciidoctor-Manual"></xref>.</t>

<t anchor="_584bf6e4-c184-0d24-9426-bb582f5083ce">The <xref target="asciidoctor-rfc"></xref> Ruby gem source code distribution also has
samples of individual RFC XML features in v2 and v3, and examples of
self-standing AsciiRFC documents, along with their RFC XML renderings.
(This includes round-tripped RFC XML documents.)</t>

<section anchor="_using_the_rfc_asciirfc_minimal_template"><name>Using the "rfc-asciirfc-minimal" template</name>

<t anchor="_91507f88-6a03-c032-0dce-9aa96f91a4c9">In addition, you can clone the sample <tt>rfc-asciirfc-minimal</tt>
repository as a template, and populate it for your AsciiRFC document
using the steps shown in <xref target="source-asciirfc-sample-template"></xref>.</t>

<t anchor="source-asciirfc-sample-template" keepWithNext="true">EXAMPLE: Cloning The AsciiRFC Document Template</t><sourcecode anchor="_5cc2e86c-fbd5-7124-75ce-b7fed6b26b39" type="console"><![CDATA[$ git clone https://github.com/riboseinc/rfc-asciirfc-minimal]]></sourcecode>
</section>

<section anchor="_installing_asciirfc_backend_processors"><name>Installing AsciiRFC Backend Processors</name>

<t anchor="_7a03325c-d183-0f48-a130-a7243b08676d">Converting your AsciiRFC to RFC XML is a simple as installing the
Asciidoctor Ruby gem <tt>asciidoctor</tt> (see "Installation" at
<xref target="Asciidoctor"></xref>) and the <tt>asciidoctor-rfc</tt> gem in Ruby (through
RubyGems), then running the <tt>asciidoctor</tt> executable on the document,
specifying the <tt>asciidoctor-rfc</tt> gem as a library.</t>

<t anchor="_67cfe8c0-3790-29ec-0c3d-6e823638d92d">The necessary steps are shown in <xref target="source-asciirfc-install-converters"></xref>.</t>

<t anchor="source-asciirfc-install-converters" keepWithNext="true">EXAMPLE: Installing The AsciiRFC Backend Processors</t><sourcecode anchor="_b722669d-a31d-5082-547f-1b6dd0954fc1" type="console"><![CDATA[$ gem install asciidoctor-rfc
$ asciidoctor -b rfc3 -r 'asciidoctor-rfc' foo.adoc  # RFC XML v3 output
$ asciidoctor -b rfc2 -r 'asciidoctor-rfc' foo.adoc  # RFC XML v2 output]]></sourcecode>
</section>

<section anchor="_iterating_asciirfc_content"><name>Iterating AsciiRFC Content</name>

<t anchor="_393403cb-14b7-d159-3e77-815f9713798e">As you author AsciiRFC content, you should iterate by running the
AsciiRFC conversion frequently, to ensure that you are still
generating valid XML through your markup. The converter makes an
effort to ensure that its XML output is valid, and it issues warnings
about likely issues; it also validates its own XML output against the
RFC XML schema (of the corresponding version), and reports errors in
the XML output in the format shown in
<xref target="source-asciirfc-schema-error"></xref>.</t>

<t anchor="source-asciirfc-schema-error" keepWithNext="true">EXAMPLE: Sample Validation Error Message From AsciiRFC</t><sourcecode anchor="_51ec4569-fd94-3281-7521-89587516e360" type="console"><![CDATA[V3 RELAXNG Validation: 12:0: ERROR: Invalid attribute
  sortRefs for element rfc]]></sourcecode>

<t anchor="_158283a9-0ae7-4eab-e4f1-dc3f0ced335c">Note that validation against the Relax NG RFC XML schema includes
confirming the referential integrity of all cross-references in the
document.</t>

<t anchor="_fbb21cd9-60d8-3c46-703b-1fabb70ecafa">It may be necessary to intervene in the XML output generated by the
converter, either because the block model of AsciiRFC does not conform
with the intended RFC XML (e.g. lists embedded in paragraphs), or
because RFC XML features are required that are not supported within
AsciiRFC.</t>
</section>
</section>
    <section anchor="_security_considerations"><name>Security Considerations</name>

<ul anchor="_5b22f7d0-cc87-8e84-b9f6-44b0ea46e551"><li>Ensure your AsciiRFC generator comes from a geniune and trustworthy
source.  This protects your own machine and also prevents injection of
malicious content in your resulting document.</li>
<li>An AsciiRFC generator may cause errors in textual rendering or link
generation that may lead to security issues.</li>
<li>Creating cross-references (and also bibliographic references) to
external documents may pose risks since the specified external
location may become controlled by a malicious party.</li>
<li>URIs that start with the "http:" or "https:" prefix are
automatically converted into links in AsciiRFC except when escaped
with a backslash before the prefix. A URI that is intended to be text
but unintentionally rendered as a link may cause users to visit a
malicious website with security consequences.</li>
<li>AsciiRFC contains syntax that can directly incorporate remote URI
content, such as <tt>include::</tt> which allows remotely-located AsciiRFC
content files.  If a remote URI contains malicious content, this
content will be included in the resulting AsciiRFC document compiled
as RFC XML.  Remotely-linked URIs should always be checked for
malicious content prior to compiling AsciiRFC into RFC XML.</li>
</ul>
</section>
    <section anchor="_iana_considerations"><name>IANA Considerations</name>

<t anchor="_e7858b61-a02f-9e3f-e95c-90d3ce4551ee">This document does not require any action by IANA.</t>
</section>
    <section anchor="_acknowledgements"><name>Acknowledgements</name>

<t anchor="_69c2f0e3-b71c-3710-dec4-3a5b9889aff6">The authors would like to thank the following persons for their
valuable advice and input.</t>

<ul anchor="_919ca3d1-39a7-f895-d432-6d5903a76b6a"><li>Adrian Farrel for his comprehensive review of the document and
numerous beneficial suggestions.</li>
</ul>
</section>
  </middle>
  <back>
    <references anchor="_bibliography">
      <name>Bibliography</name>
      <references anchor="_using_raw_rfc_xml">
        <name>Using Raw RFC XML</name>
        <t anchor="_5f173fbb-f9a2-0101-1449-23466695b44b">In the first method, bibliographic citations are handled like all
other AsciiRFC cross-references. The bibliographic entries for
normative and informative references are given in the AsciiRFC as
passthrough blocks, which contain the raw RFC XML for all references;
document conversion leaves the raw RFC XML in place.</t>
        <t anchor="_b07b26e2-6ff3-a0f7-4fe0-3778b94a4c08">This approach requires authors to maintain the normative and
informative bibliographies within the document, to update them as
citations are added and removed, and to sort them manually. However,
if the citation is stored on the IETF's RFC XML citation libraries
(see <eref target="https://xml2rfc.tools.ietf.org"></eref>), AsciiRFC will automatically
replace it with an external reference to that citation. So the body of
the citation XML can be left out.</t>
        <t anchor="_9a673db0-c2f8-a148-5d65-2bfd0b9ef029">For example, the AsciiRFC in <xref target="source-bib-asciirfc-inline"></xref> will
generate the corresponding RFC XML v3 output in <xref target="source-bib-xml-inline"></xref>.</t>
        <t anchor="source-bib-asciirfc-inline" keepWithNext="true">EXAMPLE  1: AsciiRFC Inline Bibliography</t>
        <sourcecode anchor="_67d84f39-c7be-c779-e4a2-939ae5bf2c1e" type="asciidoc"><![CDATA[CODE BEGINS

[bibliography]
== Normative References
++++
reference anchor="RFC2119"
  target="https://www.rfc-editor.org/info/rfc2119"
  front
    titleKey words for use in RFCs to Indicate
      Requirement Levels/title
    author initials="S." surname="Bradner" fullname="S. Bradner"
      organization/
    /author
    date year="1997" month="March"/
  /front
  seriesInfo name="BCP" value="14"/
  seriesInfo name="RFC" value="2119"/
  seriesInfo name="DOI" value="10.17487/RFC2119"/
/reference
++++


[bibliography]
== Informative References
++++

reference anchor="grail_film"
  front
    titleMonty Python and the Holy Grail/title
    author initials="G." surname="Chapman"/
    author initials="J." surname="Cleese"/
    author initials="E." surname="Idle"/
    author initials="T." surname="Gilliam"/
    author initials="T." surname="Jones"/
    author initials="M." surname="Palin"/
    date year="1975"/
  /front
/reference

reference anchor="RFC2635"
  target="https://www.rfc-editor.org/info/rfc2635"
front
  titleDON'T SPEW A Set of Guidelines for Mass Unsolicited
  Mailings and Postings (spam*)/title
  author initials="S." surname="Hambridge" fullname="S. Hambridge"
    organization /
  /author
  author initials="A." surname="Lunde" fullname="A. Lunde"
    organization /
  /author
  date year="1999" month="June" /
/front
seriesInfo name="FYI" value="35" /
seriesInfo name="RFC" value="2635" /
seriesInfo name="DOI" value="10.17487/RFC2635" /
/reference

reference anchor="RFC7990"
  target="https://www.rfc-editor.org/info/rfc7990"
front
titleRFC Format Framework/title
author initials="H." surname="Flanagan" fullname="H. Flanagan"
organization/
/author
date year="2016" month="December"/
/front
seriesInfo name="RFC" value="7990"/
seriesInfo name="DOI" value="10.17487/RFC7990"/
/reference

reference anchor="RFC8140"
  target="https://www.rfc-editor.org/info/rfc8140"
front
title
The Arte of ASCII: Or, An True and Accurate Representation of
an Menagerie of Thynges Fabulous and Wonderful in Ye Forme of
Character
/title
author initials="A." surname="Farrel" fullname="A. Farrel"
organization/
/author
date year="2017" month="April"/
/front
seriesInfo name="RFC" value="8140"/
seriesInfo name="DOI" value="10.17487/RFC8140"/
/reference

reference anchor='RFC8174'
  target='https://www.rfc-editor.org/info/rfc8174'
front
titleAmbiguity of Uppercase vs Lowercase in RFC 2119 Key
Words/title
author initials='B.' surname='Leiba' fullname='B. Leiba'
organization /
/author
date year='2017' month='May' /
abstracttRFC 2119 specifies common key words that may be used
in protocol specifications.  This document aims to reduce
the ambiguity by clarifying that only UPPERCASE usage of the
key words have the defined special meanings./t/abstract
/front
seriesInfo name='BCP' value='14'/
seriesInfo name='RFC' value='8174'/
seriesInfo name='DOI' value='10.17487/RFC8174'/
/reference

++++

CODE ENDS]]></sourcecode>
        <t anchor="source-bib-xml-inline" keepWithNext="true">EXAMPLE  2: AsciiRFC Inline Bibliography Rendered As RFC XML v3</t>
        <sourcecode anchor="_d277f961-3b07-1457-9da6-0336aa44453e" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/17-biblio.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[tag=bibliography1]
CODE ENDS]]></sourcecode>
      </references>
      <references anchor="asciidoctor_bibliography">
        <name>Preprocessing Using "asciidoctor-bibliography"</name>
        <t anchor="_712a7d48-68fd-ca3d-88e6-a007bf68d3ce">The alternative method is to use a preprocessing tool,
<xref target="asciidoctor-bibliography"></xref>, to import citations into the AsciiRFC
document from an external file of references.</t>
        <t anchor="_d7dfcb16-04fa-fe75-246b-fd53f9af2902">The references file consists of RFC XML reference entries, and still
needs to be managed manually; however the bibliographies are assembled
from that file, sorted, and inserted into the normative and
informative references in preprocessing. Citations in the document
itself are given as macros to be interpreted by the preprocessor; this
allows them to be split into normative and informative references.
(The MMark tool likewise splits reference citations into normative and
informative.)</t>
        <t anchor="_24055d64-6e7f-6ecc-5814-6f6d3cfbd9e7">Integration with the <tt>asciidoc-bibliography</tt> gem proceeds as follows:</t>
        <ol anchor="_3af8bc44-a390-1014-8aa2-00162c481e3a" type="1"><li><t anchor="_9c16de6b-30d5-5b1c-d599-211275238f1c">Create an RFC XML references file, consisting of a <tt>references</tt>
element with individual <tt>reference</tt> elements inserted, as would be
done for the informative and normative references normally. The
references file will contain all possible references to be used in the
file; the bibliography gem will select which references have actually
been cited in the document.</t>
<ol anchor="_1c7b566f-45b5-df1b-c0f4-14c6a3758e4c" type="a"><li>Rather than hand crafting RFC XML references for RFC documents, you
should download them from an authoritative source; e.g.,
<tt>http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml</tt>.
Note that RFC XML references from this link contains the XML
document declaration, which needs to be removed before being used in
the XML bibliography.</li>
<li>Unlike the case for RFC XML documents created manually, the
references file does not recognise XML entities and will not attempt
to download them during processing.  Any references to
<tt>http://xml.resource.org/public/rfc/bibxml/</tt> will need to be
downloaded and inserted into the references file.</li>
<li>The RFC XML in the references file will need to be appropriate to
the version of RFC XML used in the main document, as usual. Note that
RFC XML v2 references are forward compatible with v3; v3 contains a
couple of additional elements.</li>
</ol>
</li>
<li>Add to the main document header attributes referencing the
references file (<tt>:bibliography-database:</tt>), and the bibliography
style (<tt>:bibliography-style: rfc-v3</tt>).</li>
<li>References to a normative reference are inserted with the macro
<tt>cite:norm[id]</tt> instead of <tt><t><id></id></t></tt>, where <tt>id</tt> is the anchor
of the reference.</li>
<li>References to an informative reference are inserted with the macro
<tt>cite:info[id]</tt> instead of <tt><t><id></id></t></tt>, where <tt>id</tt> is the anchor
of the reference.</li>
<li><t anchor="_d1e64670-a87f-36a2-a006-74b3afb2ba63">Formatted crossreferences and <tt>relref</tt> crossreferences are entered
by inserting the expected raw XML in the <tt>text</tt> attribute. Do not use
the <tt>{cite}</tt> interpolation of the citation.  For example:</t>
<ul anchor="_fd5c15fd-5ce7-ade1-f03a-29902b506105"><li><tt><t><id></id></t>,words</tt> = <tt>cite:norm[id, text="xref target='id'words/xref"]</tt></li>
<li><tt><t><id></id></t>,format=counter: words</tt> (processed as a formatted cross-reference) =
<tt>cite:norm[id, text="xref format='counter' target='id'words/xref"]</tt></li>
<li><tt><t><id></id></t>,2.4 comma: words</tt> (processed as relref) =
<tt>cite:norm[id, text="relref displayFormat='comma' section='2.4' target='id'}/"]</tt></li>
<li><tt><t><id></id></t>#section2_4,2.4 comma: words</tt>
(processed as relref with a cross-document internal reference) =
<tt>cite:norm[id, text="relref relative='section2_4' displayFormat='comma' section='2.4' target='id'/"]</tt></li>
</ul>
</li>
<li>Normative and Informative References are inserted in the document
through a macro, which occurs where the RFC XML references would be
inserted, as shown in <xref target="source-bib-abib"></xref>.</li>
</ol>
        <t anchor="source-bib-abib" keepWithNext="true">EXAMPLE: Using asciidoctor-bibliography For Bibliography Preprocessing</t>
        <sourcecode anchor="_ddb35f24-fd90-6a78-e1c6-da42cdde69cd" type="asciidoc"><![CDATA[CODE BEGINS
[bibliography]
== Normative References

++++
bibliography::norm[]
++++

[bibliography]
== Informative References

++++
bibliography::info[]
++++
CODE ENDS]]></sourcecode>
      </references>
      <t anchor="_a74c4d34-152f-46ff-001c-1dd45fdc04f0">The simple encoding of bibliography syntax provided by AsciiDoc (and
Asciidoctor syntax) is inadequate for the complexity of bibliographic
markup required by RFC XML.</t>
      <t anchor="_0fe2df22-27c4-fbe0-de86-f59fa1b37a26">RFC documents overwhelmingly cite other RFC documents, and canonical
RFC XML bibliographic entries are available at <xref target="IETF-BibXML"></xref>; so it
would be inefficient to encode those entries natively in AsciiRFC, only to have
them converted back to RFC XML.</t>
      <t anchor="_d0744bac-d969-d6e7-070d-fd1b8f55598e">The converter provides two means of incorporating bibliographies into
RFC documents authored in AsciiRFC:</t>
      <t anchor="_ae98b0d1-659d-ae28-b132-181fcf2bcc0f">In either case, the RFC XML needs to be well-formed; missing closing
tags can lead to erratic behaviour in the converter.</t>
      <section anchor="asciidoctor_bibliography"><name>Preprocessing Using "asciidoctor-bibliography"</name>

<t anchor="_712a7d48-68fd-ca3d-88e6-a007bf68d3ce">The alternative method is to use a preprocessing tool,
<xref target="asciidoctor-bibliography"></xref>, to import citations into the AsciiRFC
document from an external file of references.</t>

<t anchor="_d7dfcb16-04fa-fe75-246b-fd53f9af2902">The references file consists of RFC XML reference entries, and still
needs to be managed manually; however the bibliographies are assembled
from that file, sorted, and inserted into the normative and
informative references in preprocessing. Citations in the document
itself are given as macros to be interpreted by the preprocessor; this
allows them to be split into normative and informative references.
(The MMark tool likewise splits reference citations into normative and
informative.)</t>

<t anchor="_24055d64-6e7f-6ecc-5814-6f6d3cfbd9e7">Integration with the <tt>asciidoc-bibliography</tt> gem proceeds as follows:</t>

<ol anchor="_3af8bc44-a390-1014-8aa2-00162c481e3a" type="1"><li><t anchor="_9c16de6b-30d5-5b1c-d599-211275238f1c">Create an RFC XML references file, consisting of a <tt>references</tt>
element with individual <tt>reference</tt> elements inserted, as would be
done for the informative and normative references normally. The
references file will contain all possible references to be used in the
file; the bibliography gem will select which references have actually
been cited in the document.</t>
<ol anchor="_1c7b566f-45b5-df1b-c0f4-14c6a3758e4c" type="a"><li>Rather than hand crafting RFC XML references for RFC documents, you
should download them from an authoritative source; e.g.,
<tt>http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml</tt>.
Note that RFC XML references from this link contains the XML
document declaration, which needs to be removed before being used in
the XML bibliography.</li>
<li>Unlike the case for RFC XML documents created manually, the
references file does not recognise XML entities and will not attempt
to download them during processing.  Any references to
<tt>http://xml.resource.org/public/rfc/bibxml/</tt> will need to be
downloaded and inserted into the references file.</li>
<li>The RFC XML in the references file will need to be appropriate to
the version of RFC XML used in the main document, as usual. Note that
RFC XML v2 references are forward compatible with v3; v3 contains a
couple of additional elements.</li>
</ol>
</li>
<li>Add to the main document header attributes referencing the
references file (<tt>:bibliography-database:</tt>), and the bibliography
style (<tt>:bibliography-style: rfc-v3</tt>).</li>
<li>References to a normative reference are inserted with the macro
<tt>cite:norm[id]</tt> instead of <tt><t><id></id></t></tt>, where <tt>id</tt> is the anchor
of the reference.</li>
<li>References to an informative reference are inserted with the macro
<tt>cite:info[id]</tt> instead of <tt><t><id></id></t></tt>, where <tt>id</tt> is the anchor
of the reference.</li>
<li><t anchor="_d1e64670-a87f-36a2-a006-74b3afb2ba63">Formatted crossreferences and <tt>relref</tt> crossreferences are entered
by inserting the expected raw XML in the <tt>text</tt> attribute. Do not use
the <tt>{cite}</tt> interpolation of the citation.  For example:</t>
<ul anchor="_fd5c15fd-5ce7-ade1-f03a-29902b506105"><li><tt><t><id></id></t>,words</tt> = <tt>cite:norm[id, text="xref target='id'words/xref"]</tt></li>
<li><tt><t><id></id></t>,format=counter: words</tt> (processed as a formatted cross-reference) =
<tt>cite:norm[id, text="xref format='counter' target='id'words/xref"]</tt></li>
<li><tt><t><id></id></t>,2.4 comma: words</tt> (processed as relref) =
<tt>cite:norm[id, text="relref displayFormat='comma' section='2.4' target='id'}/"]</tt></li>
<li><tt><t><id></id></t>#section2_4,2.4 comma: words</tt>
(processed as relref with a cross-document internal reference) =
<tt>cite:norm[id, text="relref relative='section2_4' displayFormat='comma' section='2.4' target='id'/"]</tt></li>
</ul>
</li>
<li>Normative and Informative References are inserted in the document
through a macro, which occurs where the RFC XML references would be
inserted, as shown in <xref target="source-bib-abib"></xref>.</li>
</ol>

<t anchor="source-bib-abib" keepWithNext="true">EXAMPLE: Using asciidoctor-bibliography For Bibliography Preprocessing</t><sourcecode anchor="_ddb35f24-fd90-6a78-e1c6-da42cdde69cd" type="asciidoc"><![CDATA[CODE BEGINS
[bibliography]
== Normative References

++++
bibliography::norm[]
++++

[bibliography]
== Informative References

++++
bibliography::info[]
++++
CODE ENDS]]></sourcecode>
</section>
    </references>
    <references anchor="_normative_references">
      <name>Normative References</name>
      <t><reference anchor="RFC7991" target="https://www.rfc-editor.org/info/rfc7991">
<front>

<title>The "xml2rfc" Version 3 Vocabulary</title>

<author initials="P." surname="Hoffman" fullname="P. Hoffman"><organization></organization></author>
<date year="2016" month="December"></date>

</front>
<seriesInfo name="RFC" value="7991"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC7991"></seriesInfo>
</reference></t>
    </references>
    <references anchor="_informative_references">
      <name>Informative References</name>
      <t><reference anchor="AsciiDoc" target="http://www.methods.co.nz/asciidoc/">
  <front>

<title>AsciiDoc: Text based document generation</title>

    <author initials="S." surname="Rackham" fullname="Stuart Rackham">
      <organization></organization>
    </author>
    <date year="2013" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="AsciiMathML" target="http://asciimath.org">
  <front>

<title>AsciiMath is an easy-to-write markup language for
      mathematics.</title>


    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="IETF-BibXML" target="http://xml.resource.org/public/rfc/bibxml/">
  <front>

<title>IETF BibXML Library</title>


    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="MathJax" target="https://www.mathjax.org">
  <front>

<title>MathJax: A JavaScript display engine for mathematics
      that works in all browsers.</title>


    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="NroffEdit" target="http://aaa-sec.com/nroffedit/">
  <front>

<title>WYSIWYG Internet-Draft Nroff Editor</title>

    <author initials="S." surname="Santesson" fullname="Stefan Santesson">
      <organization></organization>
    </author>
    <date year="2011" month="May"></date>
  </front>
</reference></t>
      <t><reference anchor="TeX-LaTeX" target="https://www.latex-project.org">
  <front>

<title>LaTeX is document preparation software that runs on top of
      Donald E. Knuth's TeX typesetting system.</title>


    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="asciidoctor-bibliography" target="https://github.com/riboseinc/asciidoctor-bibliography/">
  <front>

<title>Citations and Bibliography the 'asciidoctor-way'</title>

    <author>
      <organization>Ribose Inc.</organization>
      <address>
        <postal>

          <country>Hong Kong</country>
        </postal>
        <email>open.source@ribose.com</email>
        <uri>https://www.ribose.com</uri>
      </address>
    </author>
    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="Asciidoctor-Manual" target="http://asciidoctor.org/docs/user-manual/">
  <front>

<title>Asciidoctor: A fast text processor  publishing
      toolchain for converting AsciiDoc to HTML5,
      DocBook  more.</title>

    <author initials="D." surname="Allen" fullname="Dan Allen">
      <organization></organization>
    </author>
    <author initials="R." surname="Waldron" fullname="Ryan Waldron">
      <organization></organization>
    </author>
    <author initials="S." surname="White" fullname="Sarah White">
      <organization></organization>
    </author>
    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="asciidoctor-rfc" target="https://github.com/riboseinc/asciidoctor-rfc/">
  <front>

<title>asciidoctor-rfc lets you write Internet-Drafts and RFCs
      in AsciiDoc, the "asciidoctor-way".</title>

    <author>
      <organization>Ribose Inc.</organization>
      <address>
        <postal>

          <country>Hong Kong</country>
        </postal>
        <email>open.source@ribose.com</email>
        <uri>https://www.ribose.com</uri>
      </address>
    </author>
    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="Asciidoctor" target="http://asciidoctor.org">
  <front>

<title>Asciidoctor: A fast text processor  publishing
      toolchain for converting AsciiDoc to HTML5,
      DocBook  more.</title>

    <author initials="D." surname="Allen" fullname="Dan Allen">
      <organization></organization>
    </author>
    <author initials="R." surname="Waldron" fullname="Ryan Waldron">
      <organization></organization>
    </author>
    <author initials="S." surname="White" fullname="Sarah White">
      <organization></organization>
    </author>
    <date year="2017" month="November"></date>
  </front>
</reference></t>
      <t><reference anchor="datatracker-asciirfc-minimal" target="https://datatracker.ietf.org/doc/draft-asciirfc-minimal/">
  <front>

<title>IETF Datatracker: A Minimal Internet-Draft In AsciiRFC</title>


    <author initials="J" surname="Carberry" fullname="Josiah Carberry">
        <organization></organization>
    </author>

    <author initials="T" surname="Grayson" fullname="Truman Grayson">
        <organization></organization>
    </author>

    <date month="April" day="12" year="2018"></date>



  </front>
</reference></t>
      <t><reference anchor="datatracker-camelot-holy-grenade" target="https://datatracker.ietf.org/doc/draft-camelot-holy-grenade/">
<front>

<title>IETF Datatracker: The Holy Hand Grenade of Antioch</title>


<author initials="A" surname="Pendragon" fullname="Arthur Pendragon">
    <organization></organization>
</author>

<date month="Aprilt" day="15" year="2018"></date>



</front>
</reference></t>
      <t><reference anchor="datatracker-divination-cfapi" target="https://datatracker.ietf.org/doc/draft-divination-cfapi/">
<front>

<title>IETF Datatracker: An API For Calendar-Based Fortune Heuristics Services</title>


<author initials="G" surname="Destiny" fullname="Gabriel Destiny">
    <organization></organization>
</author>

<author initials="C" surname="Luck" fullname="Charise Luck">
    <organization></organization>
</author>

<date month="March" day="22" year="2018"></date>



</front>
</reference></t>
      <t><reference anchor="draftr" target="https://ipv.sx/draftr/">
  <front>

<title>draftr: an HTML front-end to pandoc2rfc</title>

    <author initials="R." surname="Barnes" fullname="Richard Barnes">
      <organization></organization>
    </author>
    <date year="2017" month="Nov"></date>
  </front>
</reference></t>
      <t><reference anchor="git-asciirfc-minimal" target="https://github.com/riboseinc/rfc-asciirfc-minimal">
  <front>

<title>Git repository: A Minimal Internet-Draft In AsciiRFC</title>


    <author initials="J" surname="Carberry" fullname="Josiah Carberry">
        <organization></organization>
    </author>

    <author initials="T" surname="Grayson" fullname="Truman Grayson">
        <organization></organization>
    </author>

    <date month="March" day="22" year="2018"></date>



  </front>
</reference></t>
      <t><reference anchor="git-camelot-holy-grenade" target="https://github.com/riboseinc/rfc-camelot-holy-grenade">
<front>

<title>Git repository: The Holy Hand Grenade of Antioch</title>


<author initials="A" surname="Pendragon" fullname="Arthur Pendragon">
    <organization></organization>
</author>

<date month="March" day="22" year="2018"></date>



</front>
</reference></t>
      <t><reference anchor="git-divination-cfapi" target="https://github.com/riboseinc/rfc-divination-cfapi">
<front>

<title>Git repository: An API For Calendar-Based Fortune Heuristics Services</title>


<author initials="G" surname="Destiny" fullname="Gabriel Destiny">
    <organization></organization>
</author>

<author initials="C" surname="Luck" fullname="Charise Luck">
    <organization></organization>
</author>

<date month="March" day="22" year="2018"></date>



</front>
</reference></t>
      <t><reference anchor="kramdown-rfc2629" target="https://github.com/cabo/kramdown-rfc2629">
  <front>

<title>kramdown-rfc2629: An RFC2629 (XML2RFC) backend for
      Thomas Leitner's kramdown markdown parser</title>

    <author initials="C." surname="Bormann" fullname="Carsten Bormann">
      <organization></organization>
    </author>
    <date year="2017" month="Nov"></date>
  </front>
</reference></t>
      <t><reference anchor="lyx2rfc" target="https://github.com/nicowilliams/lyx2rfc">
  <front>

<title>LyX to I-D/RFC export by way of Lyx export to
      XHTML and XSLT conversion to xml2rfc schema</title>

    <author initials="N." surname="Williams" fullname="Nico Williams">
      <organization></organization>
    </author>
    <date year="2014"></date>
  </front>
</reference></t>
      <t><reference anchor="mmark" target="https://github.com/miekg/mmark">
  <front>

<title>Using mmark to create I-Ds and RFCs</title>

    <author initials="R." surname="Gieben" fullname="R. (Miek) Gieben">
      <organization></organization>
    </author>
    <date year="2015" month="June"></date>

  </front>
</reference></t>
      <t><reference anchor="pandoc2rfc" target="https://github.com/miekg/pandoc2rfc">
  <front>

<title>pandoc2rfc: Use pandoc to create XML
      suitable for xml2rfc</title>

    <author initials="R." surname="Gieben" fullname="R. (Miek) Gieben">
      <organization></organization>
    </author>
    <date year="2012"></date>
  </front>
</reference></t>
      <t><reference anchor="I-D.asciirfc-minimal">
<front>

<title>A Minimal Internet-Draft In AsciiRFC</title>


<author initials="J" surname="Carberry" fullname="Josiah Carberry">
    <organization></organization>
</author>

<author initials="T" surname="Grayson" fullname="Truman Grayson">
    <organization></organization>
</author>

<date month="April" day="12" year="2018"></date>



</front>

<seriesInfo name="Internet-Draft" value="draft-asciirfc-minimal-02"></seriesInfo>
<format type="TXT" target="http://www.ietf.org/internet-drafts//draft-asciirfc-minimal-02.txt"></format>
</reference></t>
      <t><reference anchor="I-D.camelot-holy-grenade">
<front>

<title>The Holy Hand Grenade of Antioch</title>


<author initials="A" surname="Pendragon" fullname="Arthur Pendragon">
    <organization></organization>
</author>

<date month="April" day="15" year="2018"></date>



</front>

<seriesInfo name="Internet-Draft" value="draft-camelot-holy-grenade-01"></seriesInfo>
<format type="TXT" target="http://www.ietf.org/internet-drafts//draft-camelot-holy-grenade-01.txt"></format>
</reference></t>
      <t><reference anchor="I-D.divination-cfapi">
<front>

<title>An API For Calendar-Based Fortune Heuristics Services</title>


<author initials="G" surname="Destiny" fullname="Gabriel Destiny">
    <organization></organization>
</author>

<author initials="C" surname="Luck" fullname="Charise Luck">
    <organization></organization>
</author>

<date month="March" day="22" year="2018"></date>



</front>

<seriesInfo name="Internet-Draft" value="draft-divination-cfapi-00"></seriesInfo>
<format type="TXT" target="http://www.ietf.org/internet-drafts//draft-divination-cfapi-00.txt"></format>
</reference></t>
      <t><reference anchor="I-D.wu-netmod-yang-xml-doc-conventions">
<front>

<title>Documentation Conventions for Expressing YANG in XML</title>


<author initials="Q" surname="Wu" fullname="Qin Wu">
    <organization></organization>
</author>

<author initials="A" surname="Farrel" fullname="Adrian Farrel">
    <organization></organization>
</author>

<author initials="B" surname="Claise" fullname="Benoit Claise">
    <organization></organization>
</author>

<date month="January" day="26" year="2018"></date>



</front>

<seriesInfo name="Internet-Draft" value="draft-wu-netmod-yang-xml-doc-conventions-00"></seriesInfo>
<format type="TXT" target="http://www.ietf.org/internet-drafts/draft-wu-netmod-yang-xml-doc-conventions-00.txt"></format>
</reference></t>
      <t><reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
<front>

<title>Key words for use in RFCs to Indicate Requirement Levels</title>

<author initials="S." surname="Bradner" fullname="S. Bradner"><organization></organization></author>
<date year="1997" month="March"></date>

</front>
<seriesInfo name="BCP" value="14"></seriesInfo>
<seriesInfo name="RFC" value="2119"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC2119"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC5385" target="https://www.rfc-editor.org/info/rfc5385">
<front>

<title>Version 2.0 Microsoft Word Template for Creating Internet Drafts and RFCs</title>

<author initials="J." surname="Touch" fullname="J. Touch"><organization></organization></author>
<date year="2010" month="February"></date>

</front>
<seriesInfo name="RFC" value="5385"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC5385"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC7328" target="https://www.rfc-editor.org/info/rfc7328">
<front>

<title>Writing I-Ds and RFCs Using Pandoc and a Bit of XML</title>

<author initials="R." surname="Gieben" fullname="R. Gieben"><organization></organization></author>
<date year="2014" month="August"></date>

</front>
<seriesInfo name="RFC" value="7328"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC7328"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC7749" target="https://www.rfc-editor.org/info/rfc7749">
<front>

<title>The "xml2rfc" Version 2 Vocabulary</title>

<author initials="J." surname="Reschke" fullname="J. Reschke"><organization></organization></author>
<date year="2016" month="February"></date>

</front>
<seriesInfo name="RFC" value="7749"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC7749"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC7763" target="https://www.rfc-editor.org/info/rfc7763">
<front>

<title>The text/markdown Media Type</title>

<author initials="S." surname="Leonard" fullname="S. Leonard"><organization></organization></author>
<date year="2016" month="March"></date>

</front>
<seriesInfo name="RFC" value="7763"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC7763"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC7764" target="https://www.rfc-editor.org/info/rfc7764">
<front>

<title>Guidance on Markdown: Design Philosophies, Stability Strategies, and Select Registrations</title>

<author initials="S." surname="Leonard" fullname="S. Leonard"><organization></organization></author>
<date year="2016" month="March"></date>

</front>
<seriesInfo name="RFC" value="7764"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC7764"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC7990" target="https://www.rfc-editor.org/info/rfc7990">
<front>

<title>RFC Format Framework</title>

<author initials="H." surname="Flanagan" fullname="H. Flanagan"><organization></organization></author>
<date year="2016" month="December"></date>

</front>
<seriesInfo name="RFC" value="7990"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC7990"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC7996" target="https://www.rfc-editor.org/info/rfc7996">
<front>

<title>SVG Drawings for RFCs: SVG 1.2 RFC</title>

<author initials="N." surname="Brownlee" fullname="N. Brownlee"><organization></organization></author>
<date year="2016" month="December"></date>

</front>
<seriesInfo name="RFC" value="7996"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC7996"></seriesInfo>
</reference></t>
      <t><reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174">
<front>

<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>

<author initials="B." surname="Leiba" fullname="B. Leiba"><organization></organization></author>
<date year="2017" month="May"></date>

</front>
<seriesInfo name="BCP" value="14"></seriesInfo>
<seriesInfo name="RFC" value="8174"></seriesInfo>
<seriesInfo name="DOI" value="10.17487/RFC8174"></seriesInfo>
</reference></t>
    </references>
    <section anchor="appendix-a"><name>Examples</name>

<section anchor="example-1"><name>Example 1: "A Minimal Internet-Draft In AsciiRFC"</name>

<t anchor="_17a92313-fb3a-dbe4-f526-6e4332eea011">This example is available in the following formats:</t>

<ul anchor="_d3cd1d9e-b237-4c35-f85a-9b02a72308f8"><li>AsciiRFC <xref target="git-asciirfc-minimal"></xref></li>
<li>Internet-Draft <xref target="I-D.asciirfc-minimal"></xref></li>
<li>Text, RFC XML, PDF and HTML on the IETF Datatracker
<xref target="datatracker-asciirfc-minimal"></xref></li>
</ul>

<section anchor="example-1-asciirfc"><name>In AsciiRFC</name>

<sourcecode anchor="_f8fb8230-2593-d79b-0703-d280f1113646" type="asciidoc"><![CDATA[CODE BEGINS
= A Minimal Internet-Draft In AsciiRFC
:doctype: internet-draft
:name: draft-asciirfc-minimal-02
:abbrev: AsciiRFC Example
:status: informational
:ipr: trust200902
:submissionType: individual
:area: Internet
:intended-series: full-standard
:revdate: 2018-04-12T00:00:00Z
:fullname: Josiah Stinkney Carberry
:lastname: Carberry
:forename_initials: J. S.
:organization: Brown University
:phone: +1 401 863 1000
:street: Box K, 69 Brown Street
:city: Providence
:code: 02912
:country: United States of America
:uri: https://www.brown.edu
:email: josiah.carberry@ribose.com
:fullname_2: Truman Grayson
:lastname_2: Grayson
:forename_initials_2: T.
:organization_2: Brown University
:phone_2: +1 401 863 1000
:street_2: Box G, 69 Brown Street
:city_2: Providence
:code_2: 02912
:country_2: United States of America
:uri_2: https://www.brown.edu
:email_2: truman.grayson@ribose.com

[abstract]

This document provides a template on how to author (or migrate!)
a new Internet-Draft / RFC in the AsciiRFC format.

This template requires usage of the `asciidoctor-rfc` Ruby gem.

[#introduction]
== Introduction

AsciiRFC I-D.ribose-asciirfc is an extremely simple way to
author Internet-Drafts and RFCs without needing to manually
craft RFC XML conforming to RFC7991.

This is a template specifically made for authors to easily
start with creating an Internet-Draft conforming to RFC7991
and submittable to the IETF datatracker.

[#conventions]
== Terms and Definitions

The key words "*MUST*", "*MUST NOT*", "*REQUIRED*", "*SHALL*",
"*SHALL NOT*", "*SHOULD*", "*SHOULD NOT*", "*RECOMMENDED*",
"*NOT RECOMMENDED*", "*MAY*", and "*OPTIONAL*" in this
document are to be interpreted as described in BCP 14
RFC2119 RFC8174 when, and only when, they appear in
all capitals, as shown here.

This document also refers to the following terms and
definitions:

AsciiRFC::
  an AsciiDoc-derived syntax used for authoring RFCs and
  Internet-Drafts, as defined in I-D.ribose-asciirfc.

[#symbols]
== Symbols And Abbreviations

ADRFC::
  abbreviated form of AsciiRFC


[#main]
== Main content

This is where you place the main content, and the following
serves as a placeholder for your text.

Subsections are used here for demonstration purposes.

=== Getting started

The AsciiRFC and RFC toolchains *MUST* be available locally to
build this document template.

==== AsciiRFC toolchain

You will need to have:

* Ruby: for running the AsciiRFC toolchain
* `asciidoctor-rfc` gem: for converting AsciiRFC into XML RFC
  (v2 or v3)

==== XML RFC toolchain

You will need to have:

* Python: for running `xml2rfc`
* `xml2rfc`: for converting RFC XML (v2 or v3) into TXT
* `idnits`: for submission preflight


=== Referencing external content

* This is a published RFC RFC7253

* This is an Internet-Draft I-D.ribose-asciirfc

* This is an external reference RNP


[#code-snippets]
=== Code snippets

Code snippets should be wrapped with `CODE BEGINS` and
`CODE ENDS` blocks, as required by the IETF Trust Legal
Provisions (TLP) IETF.TLP specified in RFC5378.

[#security]
== Security Considerations

Any security considerations should be placed here.

As described in main (here's how you refer a local anchor),
local tools have to be installed before the document template
can be built.

Running of these local tools *MAY* produce unintended side
effects that impact security.

[#iana]
== IANA Considerations

This document does not require any action by IANA.

But if it does, such as proposing changes to IANA registries,
please include them here.

// References must be given before appendixes

[bibliography]
== Normative References

//bibliography::norm[]
++++

reference anchor='RFC2119'
  target='https://www.rfc-editor.org/info/rfc2119'
  front
    titleKey words for use in RFCs to Indicate Requirement
      Levels/title
    author initials='S.' surname='Bradner' fullname='S. Bradner'
      organization /
    /author
    date year='1997' month='March' /
    abstract
      tIn many standards track documents several words are
        used to signify the requirements in the specification.
        These words are often capitalized. This document defines
        these words as they should be interpreted in IETF
        documents.  This document specifies an Internet Best
        Current Practices for the Internet Community, and
        requests discussion and suggestions for improvements.
      /t
    /abstract
  /front
  seriesInfo name='BCP' value='14'/
  seriesInfo name='RFC' value='2119'/
  seriesInfo name='DOI' value='10.17487/RFC2119'/
/reference

reference anchor='RFC7991'
  target='https://www.rfc-editor.org/info/rfc7991'
  front
    titleThe #x22;xml2rfc#x22; Version 3 Vocabulary/title
    author initials='P.' surname='Hoffman' fullname='P. Hoffman'
      organization /
    /author
    date year='2016' month='December' /
    abstract
      tThis document defines the #x22;xml2rfc#x22;
        version 3 vocabulary: an XML-based language used for
        writing RFCs and Internet-Drafts.  It is heavily derived
        from the version 2 vocabulary that is also under
        discussion.  This document obsoletes the v2 grammar
        described in RFC 7749./t
      /abstract
  /front
  seriesInfo name='RFC' value='7991'/
  seriesInfo name='DOI' value='10.17487/RFC7991'/
/reference

reference anchor='RFC8174'
  target='https://www.rfc-editor.org/info/rfc8174'
  front
    titleAmbiguity of Uppercase vs Lowercase in RFC 2119
      Key Words/title
    author initials='B.' surname='Leiba' fullname='B. Leiba'
      organization /
    /author
    date year='2017' month='May' /
    abstract
      tRFC 2119 specifies common key words that may be
        used in protocol specifications.  This document aims to
        reduce the ambiguity by clarifying that only UPPERCASE
        usage of the key words have the defined special
        meanings./t
    /abstract
  /front
  seriesInfo name='BCP' value='14'/
  seriesInfo name='RFC' value='8174'/
  seriesInfo name='DOI' value='10.17487/RFC8174'/
/reference
++++

[bibliography]
== Informative References

//bibliography::info[]
++++

reference anchor='IETF.TLP'
  target='https://trustee.ietf.org/trust-legal-provisions.html'
  front
  titleIETF Trust Legal Provisions (TLP)/title
  author
    organizationIETF/organization
  /author
  date month='April' day='12' year='2018' /
  /front
/reference

reference anchor='RNP' target='https://github.com/riboseinc/rnp/'
  front
    titleRNP: A C library approach to OpenPGP/title
    author
      organizationRibose Inc./organization
      address
        postal
          streetSuite 1111, 1 Pedder Street/street
          cityCentral/city
          regionHong Kong/city
          countryHong Kong/country
        /postal
        emailopen.source@ribose.com/email
        urihttps://www.ribose.com/uri
      /address
    /author
    date day='31' month='March' year='2018'/
  /front
/reference

reference anchor='I-D.ribose-asciirfc'
  front
  title
    AsciiRFC: Authoring Internet-Drafts And RFCs Using AsciiDoc
  /title
  author initials="R" surname="Tse" fullname="Ronald Tse"
    organization/
  /author
  author initials="J" surname="Lau" fullname="Jeffrey Lau"
    organization/
  /author
  author initials="N" surname="Nicholas" fullname="Nick Nicholas"
    organization/
  /author
  author initials="P" surname="Brasolin" fullname="Paolo Brasolin"
    organization/
  /author
    date month="March" day="23" year="2018"/
    abstract
      tThis document describes an AsciiDoc syntax
extension called AsciiRFC, designed for authoring IETF
Internet-Drafts and RFCs.  AsciiDoc is a human readable document
markup language which affords more granular control over markup
than comparable schemes such as Markdown.  The AsciiRFC syntax
is designed to allow the author to entirely focus on text,
providing the full power of the resulting RFC XML through the
AsciiDoc language, while abstracting away the need to manually
edit XML, including references.  This document itself was
written and generated into RFC XML v2 (RFC7749) and RFC XML v3
(RFC7991) directly through asciidoctor-rfc, an AsciiRFC
generator./t
    /abstract
  /front
seriesInfo name="Internet-Draft" value="draft-ribose-asciirfc-04"/
format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ribose-asciirfc-04.txt"/
/reference

reference anchor="RFC5378"
  target="https://www.rfc-editor.org/info/rfc5378"
  front
  titleRights Contributors Provide to the IETF Trust/title
  author initials="S."
    surname="Bradner" fullname="S. Bradner" role="editor"
    organization/
  /author
  author initials="J."
    surname="Contreras" fullname="J. Contreras" role="editor"
    organization/
  /author
  date year="2008" month="November"/
  abstracttThe IETF policies about rights in Contributions
    to the IETF are designed to ensure that such Contributions
    can be made available to the IETF and Internet communities
    while permitting the authors to retain as many rights as
    possible. This memo details the IETF policies on rights in
    Contributions to the IETF. It also describes the
    objectives that the policies are designed to meet. This
    memo obsoletes RFCs 3978 and 4748 and, with BCP 79 and
    RFC 5377, replaces Section 10 of RFC 2026. This document
    specifies an Internet Best Current Practices for the
    Internet Community, and requests discussion and
    suggestions for improvements./t/abstract
  /front
  seriesInfo name="BCP" value="78"/
  seriesInfo name="RFC" value="5378"/
  seriesInfo name="DOI" value="10.17487/RFC5378"/
/reference

reference anchor='RFC7253'
  target='https://www.rfc-editor.org/info/rfc7253'
  front
    titleThe OCB Authenticated-Encryption Algorithm/title
    author initials='T.' surname='Krovetz' fullname='T. Krovetz'
      organization /
    /author
    author initials='P.' surname='Rogaway' fullname='P. Rogaway'
      organization /
    /author
    date year='2014' month='May' /
    abstracttThis document specifies OCB, a shared-key
        blockcipher-based encryption scheme that provides
        confidentiality and authenticity for plaintexts and
        authenticity for associated data.  This document is a product
        of the Crypto Forum Research Group (CFRG)./t/abstract
  /front
  seriesInfo name='RFC' value='7253'/
  seriesInfo name='DOI' value='10.17487/RFC7253'/
/reference
++++


[appendix]
[#appendix-a]
== Examples

=== Example 1

Here's an example of a properly wrapped code snippet in
accordance with rules specified in code-snippets.

[source,json]
----
CODE BEGINS
{
  "code": {
    "encoding": "ascii",
    "type":     "rfc",
    "authors":  [ "Josiah Carberry", "Truman Grayson" ]
  }
}
CODE ENDS
----

[#acknowledgements]
== Acknowledgements

The authors would like to thank their families.

CODE ENDS]]></sourcecode>

</section>

<section anchor="example-1-xml3"><name>Rendered as RFC XML v3</name>

<sourcecode anchor="_08ead41f-3000-edc6-fd91-adfbc480502e" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/97-examples.adoc - include::../examples/rfc-asciirfc-minimal/xml3/draft-asciirfc-minimal.xml[]
CODE ENDS]]></sourcecode>

</section>
</section>

<section anchor="example-2"><name>Example 2: "The Holy Hand Grenade of Antioch"</name>

<t anchor="_e013b308-1b8d-c61b-fe41-65d300c77a55">This example is available in the following formats:</t>

<ul anchor="_52d5b9c2-cbf1-d4a1-0474-2b94731b83e8"><li>AsciiRFC <xref target="git-camelot-holy-grenade"></xref></li>
<li>Internet-Draft <xref target="I-D.camelot-holy-grenade"></xref></li>
<li>Text, RFC XML, PDF and HTML on the IETF Datatracker
<xref target="datatracker-camelot-holy-grenade"></xref></li>
</ul>

<section anchor="example-2-asciirfc"><name>In AsciiRFC</name>

<sourcecode anchor="_d806263a-d36f-7e59-d723-5739a9471847" type="asciidoc"><![CDATA[CODE BEGINS
= The Holy Hand Grenade of Antioch
Arthur son of Uther Pendragon
:doctype: internet-draft
:abbrev: Hand Grenade of Antioch
:updates: 8140
:submission-type: independent
:name: draft-camelot-holy-grenade-01
:status: informational
:consensus: false
:area: General, Operations and Management
:keyword: rabbits, grenades, antioch, camelot
:ipr: trust200902
:toc-include: true
:sort-refs: true
:revdate: 2018-04-15T00:00:00Z
:fullname: Arthur son of Uther Pendragon
:forename_initials: A.
:lastname: Pendragon
:email: arthur.pendragon@ribose.com
:organization: Camelot
:uri: http://camelot.gov.example
:street: Palace\ Camel Lot 1
:city: Camelot
:region: England
:country: United Kingdom
:comments: yes
:notedraftinprogress: yes
:smart-quotes: false

[.comment]
tag::preamble1[]
// tag::preamble[]

[abstract]
The menagerie of beasts and artefacts depicted in RFC8140
may be usefully supplemented by other renowned figures of
Internet and more general lore. This document extends the
menagerie to the seminal fable of the
"Holy Hand Grenade of Antioch", as depicted in the
Monty Python film "Monty Python and the Holy Grail",
as well as "Spamalot", the musical inspired by the movie.

[NOTE,remove-in-rfc=false]
.Spamalot
The relevance of the musical "Spamalot" to Internet lore should be
obvious to the reader; but in case of doubt, see also
Section 1 ("What is Spam*?") of RFC2635.

// end::preamble[]
[.comment]
end::preamble1[]

[.comment]
tag::sectnums1[]
// tag::sectnums[]

[toc=exclude]
:sectnums!:
== Terminology

The key words "*MUST*", "*MUST NOT*", "*REQUIRED*", "*SHALL*",
"*SHALL NOT*", "*SHOULD*", "*SHOULD NOT*", "*RECOMMENDED*",
"*NOT RECOMMENDED*", "*MAY*", and "*OPTIONAL*" in this document
are to be interpreted as described in BCP 14 RFC2119 RFC8174
when, and only when, they appear in all capitals, as shown here.

:sectnums:
== Introduction

RFC8140 refers to the intended move of RFC formatting to
XML2RFC v3 RFC7990, in the following terms:

// end::sectnums[]
[.comment]
end::sectnums1[]

[.comment]
tag::quote1[]
// tag::quote[]

[quote,attribution="A. Farrel"]
____
Although the RFC Editor has recently dragged the IETF kicking and
screaming into the twentieth century [RFC7990] [RFC7996], there is a
yearning among all right-thinking Internet architects to "keep it
simple" and to return to the olden days when pigs could be given
thrust without anyone taking undue offence.
____

// end::quote[]
[.comment]
end::quote1[]

While no pigs, flying or otherwise, are involved in the transition
to RFC XML v3, it is opportune to enhance the RFC8140
legendarium in the service of RFC XML v3, by illustrating its
functionality through references to the mythology of Camelot, and
particularly the incidents at the Cave of Caerbannog.

[.comment]
tag::escaped_hyperlink1[]
// tag::escaped_hyperlink[]

The screaming move into the twenty-*first* century is accompanied by
a move back to the late twentieth century, with ASCII stylings more
wonted in haunts like \ftp://ftp.wwa.com/pub/Scarecrow (known to be
accessible in 1996.)

// end::escaped_hyperlink[]
[.comment]
end::escaped_hyperlink1[]

There are two references to rabbits in
_Monty Python and the Holy Grail_ which are expounded on herewith:

[.comment]
tag::listcontinuation1[]
// tag::listcontinuation[]

Trojan Rabbit::
In their siege of the French-occupied castle which may already
contain an instance of the Grail, Sir Bedevere the Wise proposes to
use a Trojan Rabbit to infiltrate the castle, with a raiding party
to take the French "not only by surprise, but totally unarmed."
+
The proposal, unsurprisingly, proved abortive. The more so as the
raiding party forgot to hide within the Trojan Rabbit, before the
French soldiers took the Trojan Rabbit inside the castle.

Killer Rabbit of Caerbannog::
Guarding the entrance to the Cave of Caerbannog; see caerbannog.

// end::listcontinuation[]
[.comment]
end::listcontinuation1[]

== The French-occupied castle

[.comment]
tag::inline_formatting1[]
// tag::inline_formatting[]

The participants of that renowned exercise in cross-cultural
communication, to wit the exchange between the
_Knights of the Round Table_
and the taunting French soldiers serving under *Guy de Lombard* are,
properly speaking, outside the scope of this `menagerie`, being more
or less human. Notwithstanding, several^ish^ beasts both animate~d~
and wooden played a significant part in this encounter; most
notably:

* The Projectile Cow, see projectile-cow
* The Trojan Rabbit, see trojan-rabbit

// end::inline_formatting[]
[.comment]
end::inline_formatting1[]


[[projectile-cow]]
.The Projectile Cow with an accompanying cannon
====
[alt=The Projectile Cow with an accompanying cannon in ASCII]
....
.-.-.-.-.-.-.-.-.-.-.-.--.-.-.-.-.-.-.--.-.-.-.-.-.-.-.--.-.
_-_---__--__--___-___-__-____---___-________---____-____-__-
._.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.--..-.-.-.-.-.-..--.-
,..,.,.,.,.,..,.,,..,.,.,.,.,.,,  ^^  .,,.,.,  ^^   .,.,.,.=
_-.-.-.-.____.-.-.-.-.-.-.-.  \\\  .,.,.  ///  .-.-.-.-.
.,.,.,.,..,.,..,.,.,..,.,.,,..,.,  \ \_______/ /    .,.,.,.,
.,.,.,.,..,.,.,.,..,,..,,.,.,.,.,.  [ {o} . ]  #   .,.,.,.
.-.-.--.-.-.-.-.-.--.-.-.-.--.-.-.   [ ______]       .-.-.-.
.-.--.-.-.-.--.-.-.-.--.-.-.,.,.,  / [ !  ` `]   .,.,..,.,.-
.,.,.,.-.-,l,-,l.-,.,.,.,-.,*.    /  {_!MOO!_}    . ., . . ,
.-.-.-.-.-.-.-.-.-.-.-.-.-.-    /M      /    -.-.,.,..-.-,
.-.-.--.-.-.-.-.-.-.-.-.--..   /MI    LK\____    .-.-.-.-.-.
.-.-.-.--.-.-.-.-.-.-.-.-.-   /MILK   mil_____k   ,.,.,..-,-
.-,-.-,-.,-.-,-.`-.-/-..     //    -`  //       .-.p . .-.-.
.-.--.-.-.-.-.-.-.-.        //   .,   //    .-.-.-.-.-.-.-.-
.-.-.--.-.-.-.-.-.-.  %____============    .-.-.--.-.-.-.-.-
-.-.-.-.--.-.-.-.-.-.      !  !           .,-.-.-,-,--,-.-,-
,--.-.-,--.--.-.,--,        \ \      .-,-,--.-,--,-.---,-.-,
,-.-.-,-,-.-,-,-.--,         +      .-,--,-.--,-,-.-.-,--,-
,--.-,--,-,--.---,-               .-,-,--.--,--,-.---,-,-.-.
.,.,.,.,..,.,.,.{A\      .,.,.,.,..,.,.,.,.,.,..,.,.,.,..,.,
.,.,.,.,.,.,.{GLASS\   .,..,.,.,.,.,..,.,.,.,.,.,.,..,.,.,.,
,..,.,,.,,.,{OF|MILK\..,.,.,.,.,..,.,.,.,.,.,..,.,.,.,.,.,.,
,.,..,.,,.,{ISWORTH},.,.,..,.,.,.,.,..,..,.,.,..,.,.,.,.,.,.
.,.,.,.,.{EVERYTNG}.-.-.--..-.-.-.-.--..--.-.-.-.-.--.-.-.-.
-.-.-.-{FORINFANTS}___--___-_-__-___--*(0~`~.,.,.,.,.
_-__-_{BUTBETTER}-.-,-,-,-,-,-,-,-,.-^^^^.-.-.-.-.^^^7,..
.._...{WITH_HONEY}-.-.-.-.-.-.-.-.-.-.RANDOM(BUSH)SHRUBS_..
GRASS_GRASS_GRASS_GRASS_GRASS_SOMEROCKSGRASSGRASSGRASSPC
SOIL_ROOTS_SOIL_SOIL_ROCKS_SOIL_GRASS_GRASS_GRASS_ROCKS_SOIL
CLAY_ROCKS_PEBBLES_CLAY_CLAY_CLAY_CLAY_GOLD_CLAY_CLAY_WORM
ROOTS_CLAY_SKELETON_MORESOIL_CLAY_CLAY_CLAY_CLAY_MUSHROOMS
....
====

[[trojan-rabbit]]
.The Trojan Rabbit with an automatic sliding door
====
[alt=The Trojan Rabbit with an automatic sliding door, in ASCII]
....
                           ___  ____
                          //_ \//\__\
                            || ||  |
                         -__||_||__|
                       //         \--_
                      //     ____     --___
                     //     //   \         \-_
                    //      \\  @/        o ||
                   //        ----      _____||
                  //                   //
             //\_//__                 //
           //--  --- \____           //
          //          --- \______   //
         //   , .          ----- \_//_
        //       ,.               --- \____
       //              .,v             --- \___
      //                                 __ -- \_
     ||  ,         _______________       //||     |-_
     ||           |   |''''''''''|     // ||     |  |
     ||     '     |   |          |        ||     |  |
     ||           |   |          |        ||     |  |
     ||      "    |   | 0        |     ___||___  |  |
     ||           |   |          |     --------  |  |
     ||___        |   |          |        ______ |  |-
    //     \      |   |          |       //     \| _| \
   //       \ ____|---|__________|______//       \/    |
  ||    X    |      /                  ||    X    |   /
   \\       /\\____/                    \\       /___/
    \\_____/ -----                       \\_____/---
     -----                                -----
....
====

[.comment]
tag::aside1[]
// tag::aside[]

****
While the exchange at the French-occupied castle is one of
the more memorable scenes of _Monty Python and the Holy Grail_,
the Trojan Rabbit has not reached the same level of cultural
resonance as its more murderous counterpart. Reasons for this
may include:

* Less overall screen-time dedicated to the Trojan Rabbit.

* The Trojan Rabbit as projectile has already been anticipated
by the Cow as projectile.
****

// end::aside[]

[.comment]
end::aside1[]

[.comment]
tag::note1[]
// tag::note[]

[NOTE,display=true,source=Author]
====
Image courtesy of
https://camelot.gov.example/creatures-in-ascii/
====

// end::note[]
[.comment]
end::note1[]


[.comment]
tag::comment1[]
// tag::comment[]

The exchange of projectile animals was the beginning of a
long-running fruitful relationship between the British and the
French peoples,
[comment]#TODO: Will need to verify that claim.# which
arguably predates the traditional English enmity with the
French. [comment]#Strictly speaking, the Knights are Welsh.#

[.comment]
--
This document, as it turns out, has a profusion of XML comments.

As expected, they are ignored in any rendering of the document.
--


// end::comment[]
[.comment]
end::comment1[]

[[caerbannog]]
== The Mythos of Caerbannog

[.comment]
tag::xref1[]
// tag::xref[]

The _Cave of Caerbannog_ has been well-established in the mythology
of Camelot (as recounted by Monty Python) as the lair of the
Legendary Black Beast of Arrrghhh, more commonly known today as the
*Killer Rabbit of Caerbannog* killer_rabbit_caerbannog.
It is the encounter between the Killer Rabbit of Caerbannog and the
Knights of the Round Table, armed with the Holy Hand Grenade of
Antioch (see the holy_hand_grenade,following section), that we
recount here through monospace font and multiple spaces.

[[killer_rabbit_caerbannog]]
=== The Killer Rabbit of Caerbannog

// end::xref[]
[.comment]
end::xref1[]

[.comment]
tag::relref1[]
// tag::relref[]

The *Killer Rabbit of Caerbannog*, that most formidable foe of
the Knights and of all that is holy or carrot-like, has been
depicted diversely in lay and in song. We venture to say,
_contra_ the claim made in RFC8140,4.1 of: Ze Vompyre,
that the Killer Rabbit of Caerbannog truly is the most afeared
of all the creatures. Short of sanctified ordnance such as
holy_hand_grenade,format=title, there are few remedies
known against its awful lapine powers.

// end::relref[]
[.comment]
end::relref1[]

[.comment]
tag::hyperlink1[]
// tag::hyperlink[]

killer-bunny,The following depiction of the fearsome beast
has been sourced from
http://camelot.gov.example/avatars/rabbit[Rabbit-SCII],
killer-source,accompanied
by C code that was used in this accurate depiction of the
Killer Rabbit:

// end::hyperlink[]
[.comment]
end::hyperlink1[]

[.comment]
tag::figure1[]
// tag::figure1a[]

[[killer-bunny]]
.A Photo Of The Killer Rabbit of Caerbannog Taken In Secret
====
[alt=The Killer Bunny, in ASCII]
....
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\^^^^^^^^^^^^^^^^^^^^^^\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\#MWSHARPMWMWMWTEETHWMWWM\\\\\\\\\\\\
\\\\\\\\\\\\\\\#WMMWMWDEEPMDARKWCAVEMWWMMWM##\\\\\\\\
\\\\\\\\\\\\\#WMWMWMWMWWM/^MWMWMWMWMWMW^WMWMWMMW#\\\\\\
\\\\\\\\\\\\#WMWMBEASTMW// \MWABBITWMW/ \MWMWMWMW##\\\\\\\
\\\\\\\\\\##MWMWMMWMWMWMWM\\  \MWMWMWMW/  /MWMWMWMWM##\\\\\\
\\\\\\\\##WMWMWMWMMWMWMWMWM\\  \MWMWMW/  /MWMWMWMMWMWMWM##\\
\\\\\\\##MWMMRAVENOUSMWMWMWM\\  \====/  /MWMRABBITMWMWMWMW##
\\\\\\##MWMWMWMWMMWMWMWMWMW[[            ]WMWMWMMWMWMWMWMWMW
\\\\\##MWMWMWMWCARNIVOROUSW[[   3    3   ]MWMWTOOMDARKWMWMMW
\\\\##MWMWDARKMWMWMWMWMWMWM//\     o    /MWMWMWMMWMWMWMMWMWM
\\##MWMWMMKILLERABBITWMWMM//| \___vv___/ \WMPITCHWBLACKWMWMW
\##MWMWMWMMWMWMWMWMWMMWMW// |   \-^^-/   |MWMWMWMMWMWMWMWMWM
MWMWMWMMWMWVERYMDARKWMMW//  |            |MWMCAERBANNOGWMWMW
MWMWMWMMWMWMWMWMWMWMWMM{{  /             /MWMWMMWMWMWMWMWMWM
MULTRADARKWMWMHELPMWMWMW\\ \  |      |  |MWMCANMMWMWMWMMWMWW
MWMWMWMWMMWMWMWMWMMWMWMWM\\ | |_     |  |_WMWMMYOUMWMMWWMWMW
MWMMWMWMWMWMBLACKWMWMWMWWM\_|__-\-----\__-\MWMWMWMREADMWMWWM
MWMWMWMMWMWMWMWMMWMWMWWMWMWMWMMWMWMWMWMWMWMWMWMWMWMWMMTHISWW
MWVERYMMSCARYMWMWWMWMMWMWMWMWMWMWMWMWMWMWMWMWWMWMMWMWIWM'.',
MWMWMMWMW======MWMMCANTWSEEMAMTHINGMMWMWMWMWMWMWMBETMMW` . `
MWMWMWM// SKULL \MWMWMWMMWSCREAMMMWMWMWMMWMNOTMWMWMWW  ` . \
MWMWMW|| |X||X| |MWMWCALLMMEWMMWMWMMWMWMWMWWM - ` ~ . , '
MWMWMW||___ O __|MWMWMWMMWMWMWMWMMW'   ___________//   -_^_-
MWMWMW \\||_|_||MWMW      '   . .     _|_|_||_|__|     \O/
MW   \\/\||v v||  -\\-------___     .   .,         \     |
    \\|  \_CHIN/  ==-(|CARROT/)\     \\/||//         v\/||/
       )          /--------^-^            ,.            \|//
 #  \(/ .\\|x//                              " ' '
  . ,                \\||//        \||\\\//   \\
....
====

[[killer-source]]
.C Code To Lure Killer Rabbit Back To Cave
====
[source,c]
----
CODE BEGINS
/* Locate the Killer Rabbit */
int type;
unsigned char *killerRabbit =
  LocateCreature(#x26;caerbannog, #x22;killer rabbit#x22;);
if( killerRabbit == 0 ){
  puts("The Killer Rabbit of Caerbannog is out of town.");
  return LOST_CREATURE;
}

/* Load Cave */
unsigned char *cave = LoadPlace(caerbannog,
  "The Cave Of Caerbannog");
if( cave == 0 ){
  puts("The Cave of Caerbannog must have moved.");
  return LOST_PLACE;
}

/* Lure the Killer Rabbit back into the Cave */
unsigned char *carrot = allocateObjectInPlace(
  carrot("fresh"), cave);
if( carrot == 0 ){
  puts("No carrot, no rabbit.");
  return LOST_LURE;
}

/* Finally, notify the Killer Rabbit to act */
return notifyCreature(killerRabbit, #x26;carrot);
CODE ENDS
----
====


// end::figure1a[]
[.comment]
end::figure1[]

On the beast's encounter with the Knights of the Round Table,
the following personnel engaged with it in combat:

[.comment]
tag::ul1[]
// tag::ul[]

* Killed
** Sir Bors
** Sir Gawain
** Sir Ector
* Soiled Himself
** Sir Robin
* Panicked
** King Arthur
* Employed Ordnance
** The Lector
** Brother Maynard
* Scoffed
** Tim the Enchanter

// end::ul[]
[.comment]
end::ul1[]




[[holy_hand_grenade]]
=== Holy Hand Grenade of Antioch

[.comment]
tag::figure2[]

// tag::figure2a[]

[[hand-grenade-figure]]
.The Holy Hand Grenade of Antioch (don't pull the pin)
====
[alt=Holy Hand Grenade of Antioch, in ASCII]
....
                        ______
                       \\/  \/
                      __\\  /__
                     ||  //\   |
                     ||__\\/ __|
                        ||  |    ,---,
                        ||  |====`\  |
                        ||  |    '---'
                      ,--'*`--,
                    _||#|***|#|
                 _,/.-'#|* *|#`-._
               ,,-'#####|   |#####`-.
             ,,'########|   |########`,
            //##########| o |##########\
           ||###########|   |###########|
          ||############| o |############|
          ||------------'   '------------|
          ||o  o  o  o  o   o  o  o  o  o|
           |-----------------------------|
           ||###########################|
            \\#########################/
             `..#####################,'
               ``..###############_,'
                  ``--.._____..--'
                     `''-----''`
....
====

// end::figure2a[]

[.comment]
end::figure2[]


[[sovereign-orb]]
.The Sovereign's Orb made invisible
====
.Outlines of the Sovereign's Orb
[link=https://camelot.gov.example/sovereigns_orb.jpg,align=right]
image::https://camelot.gov.example/sovereigns_orb.jpg[Orb,124,135]
====

[.comment]
tag::index1[]
// tag::index[]

The solution to the impasse at the ((Cave of Caerbannog)) was
provided by the successful deployment of the
*Holy Hand Grenade of Antioch* (see hand-grenade-figure)
(((Holy Hand Grenade of Antioch))).
Any similarity between the Holy Hand Grenade of Antioch and the
mythical _Holy Spear of Antioch_ is purely intentional;
(((relics, Christian))) any similarity between the Holy Hand Grenade
of Antioch and the _Sovereign's Orb of the United Kingdom_
(see sovereign-orb) is putatively fortuitous.
(((relics, monarchic)))

// end::index[]
[.comment]
end::index1[]

[.comment]
tag::dl1[]
// tag::dl[]

Holy Hand Grenade of Antioch::
  Ordnance deployed by Brother Maynard under the incantation of a
  lector, in order to dispense with the Foes of the Virtuous.
  See hand-grenade-figure.

Holy Spear of Antioch::
  A supposed relic of the crucifixion of Jesus Christ, this is one
  of at least four claimed instances of the lance that pierced
  Christ's side. Its historical significance lies in inspiring
  crusaders to continue their siege of Antioch in 1098.

Sovereign's Orb of the United Kingdom::
  Part of the Crown Jewels of the United Kingdom, the Sovereign's
  Orb is a hollow gold sphere set with jewels and topped with a
  cross.  It was made for Charles II in 1661. See sovereign-orb.

// end::dl[]
[.comment]
end::dl1[]

[.comment]
tag::bcp14_1[]
// tag::bcp14[]

The instructions in the _Book of Armaments_ on the proper deployment
of the Holy Hand Grenade of Antioch [bcp14]#may# be summarized as
follows, although this summary *SHALL NOT* be used as a substitute
for a reading from the Book of Armaments:

// end::bcp14[]
[.comment]
end::bcp14_1[]


[.comment]
tag::ol1[]
// tag::ol[]

. Preamble: St Attila Benediction
. Feast of the People on Sundry Foods
** Lambs
** Sloths
** Carp
** Anchovies
** Orangutangs
** Breakfast Cereals
** Fruit Bats
** _et hoc genus omne_
. Take out the Holy Pin
. The Count
[upperalpha]
.. Count is to Three: no more, no less
.. Not Four
.. Nor Two, except if the count then proceeds to Three
.. Five is Right Out
. Lob the Holy Hand Grenade of Antioch towards the Foe
. The Foe, being naughty in the *LORD's* sight, [bcp14]#shall# snuff it

// end::ol[]
[.comment]
end::ol1[]

This could also be represented in pseudocode as follows:

[.comment]
tag::listcontinuationblock1[]
// tag::listcontinuationblock[]

. Take out the Holy Pin
. The Count
+
----
integer count;
for count := 1 step 1 until 3 do
  say(count)
comment Five is Right Out
----
. Lob the Holy Hand Grenade of Antioch towards the Foe
. Foe snuffs it

// end::listcontinuationblock[]
[.comment]
end::listcontinuationblock1[]

== Dramatis Personae

The following human (more-or-less) protagonists were involved
in the two incidents recounted as lore of the Knights of the
Round Table:

[.comment]
tag::table1[]
// tag::table[]

[grid=all,options="footer"]
|===
|French Castle | Cave of Caerbannog

2+|King Arthur
2+|Patsy
2+|Sir Bedevere the Wise
2+|Sir Galahad the Pure
2+|Sir Lancelot the Brave
2+|Sir Robin the Not-quite-so-brave-as-Sir-Lancelot
|French Guard with Outrageous Accent| Tim the Enchanter
|Other French Guards | Brother Maynard
| | The Lector
.3+^|not yet recruited
|Sir Bors
|Sir Gawain
|Sir Ector

|Retinue of sundry knights
|Retinue of sundry more knights than at the French Castle
|===

// end::table[]
[.comment]
end::table1[]

=== Past the Killer Rabbit

Once the Killer Rabbit of Caerbannog (killer-bunny) had been
dispatched, the Knights of the Round Table uncovered the last
words of Joseph of Arimathea, inscribed on the Cave of Caerbannog
in Aramaic.  While the precise Aramaic wording has not survived,
we trust the following Hebrew subtitles will serve as an
acceptable substitute:

[.comment]
tag::hebrew1[]
// tag::hebrew[]

____
#x2e;כאן אולי ימצאו המילים האחרונות של יוסף מארמתיה
#x2e;מי אשר יהיה אמיץ ובעל נפש טהורה יוכל למצוא את הגביע הקדוש בטירת אאאאאאאה

"Here may be found the last words of Joseph#xa0;of Arimathea.
He who is valiant and pure of spirit may find the Holy Grail
in the castle of #x2014; Aaaargh."
____

// end::hebrew[]
[.comment]
end::hebrew1[]


== IANA Considerations

IANA might consider a registry to track the mythical, especially
ravaging beasts, such as the Killer Rabbit, who haunt the Internet.


== Security Considerations

Do not let the Killer Rabbit out under any circumstance.

I repeat. Do not let the Killer Rabbit (killer-bunny) out.


[.comment]
tag::bibliography1[]
// tag::bibliography[]

[bibliography]
== Normative References
++++
reference anchor="RFC2119"
  target="https://www.rfc-editor.org/info/rfc2119"
  front
    titleKey words for use in RFCs to Indicate
      Requirement Levels/title
    author initials="S." surname="Bradner" fullname="S. Bradner"
      organization/
    /author
    date year="1997" month="March"/
  /front
  seriesInfo name="BCP" value="14"/
  seriesInfo name="RFC" value="2119"/
  seriesInfo name="DOI" value="10.17487/RFC2119"/
/reference
++++


[bibliography]
== Informative References
++++

reference anchor="grail_film"
  front
    titleMonty Python and the Holy Grail/title
    author initials="G." surname="Chapman"/
    author initials="J." surname="Cleese"/
    author initials="E." surname="Idle"/
    author initials="T." surname="Gilliam"/
    author initials="T." surname="Jones"/
    author initials="M." surname="Palin"/
    date year="1975"/
  /front
/reference

reference anchor="RFC2635"
  target="https://www.rfc-editor.org/info/rfc2635"
front
  titleDON'T SPEW A Set of Guidelines for Mass Unsolicited
  Mailings and Postings (spam*)/title
  author initials="S." surname="Hambridge" fullname="S. Hambridge"
    organization /
  /author
  author initials="A." surname="Lunde" fullname="A. Lunde"
    organization /
  /author
  date year="1999" month="June" /
/front
seriesInfo name="FYI" value="35" /
seriesInfo name="RFC" value="2635" /
seriesInfo name="DOI" value="10.17487/RFC2635" /
/reference

reference anchor="RFC7990"
  target="https://www.rfc-editor.org/info/rfc7990"
front
titleRFC Format Framework/title
author initials="H." surname="Flanagan" fullname="H. Flanagan"
organization/
/author
date year="2016" month="December"/
/front
seriesInfo name="RFC" value="7990"/
seriesInfo name="DOI" value="10.17487/RFC7990"/
/reference

reference anchor="RFC8140"
  target="https://www.rfc-editor.org/info/rfc8140"
front
title
The Arte of ASCII: Or, An True and Accurate Representation of
an Menagerie of Thynges Fabulous and Wonderful in Ye Forme of
Character
/title
author initials="A." surname="Farrel" fullname="A. Farrel"
organization/
/author
date year="2017" month="April"/
/front
seriesInfo name="RFC" value="8140"/
seriesInfo name="DOI" value="10.17487/RFC8140"/
/reference

reference anchor='RFC8174'
  target='https://www.rfc-editor.org/info/rfc8174'
front
titleAmbiguity of Uppercase vs Lowercase in RFC 2119 Key
Words/title
author initials='B.' surname='Leiba' fullname='B. Leiba'
organization /
/author
date year='2017' month='May' /
abstracttRFC 2119 specifies common key words that may be used
in protocol specifications.  This document aims to reduce
the ambiguity by clarifying that only UPPERCASE usage of the
key words have the defined special meanings./t/abstract
/front
seriesInfo name='BCP' value='14'/
seriesInfo name='RFC' value='8174'/
seriesInfo name='DOI' value='10.17487/RFC8174'/
/reference

++++

// end::bibliography[]
[.comment]
end::bibliography1[]
CODE ENDS]]></sourcecode>

</section>

<section anchor="example-2-xml3"><name>Rendered as RFC XML v3</name>

<sourcecode anchor="_0c5696ac-5792-8c49-7635-d7c9b68473bb" type="asciidoc"><![CDATA[CODE BEGINS
Unresolved directive in sections/97-examples.adoc - include::../examples/rfc-camelot-holy-grenade/xml3/draft-camelot-holy-grenade.xml[]
CODE ENDS]]></sourcecode>

</section>
</section>

<section anchor="example-3"><name>Example 3: "An API For Calendar-Based Fortune Heuristics Services" in AsciiRFC</name>

<t anchor="_01f333b4-9e3d-249c-ad0e-f824b6f1e949">This example is available in the following formats:</t>

<ul anchor="_c7661a1d-27a5-bd66-4a2c-513f605904ca"><li>AsciiRFC <xref target="git-divination-cfapi"></xref></li>
<li>Internet-Draft <xref target="I-D.divination-cfapi"></xref></li>
<li>Text, RFC XML, PDF and HTML on the IETF Datatracker
<xref target="datatracker-divination-cfapi"></xref></li>
</ul>

<section anchor="example-3-asciirfc"><name>In AsciiRFC</name>

<sourcecode anchor="_d74a24a2-16ca-6f3e-792a-fe7a47ea7616" type="asciidoc"><![CDATA[CODE BEGINS
= An API For Calendar-Based Fortune Heuristics Services
Gabriel Destiny; Charise Luck
:doctype: internet-draft
:abbrev: Calendar Fortune Heuristics API
:name: draft-divination-cfapi-00
:status: informational
:ipr: trust200902
:area: Internet
:submission-type: independent
:intended-series: informational
:revdate: 2018-03-23T00:00:00Z
:lastname: Destiny
:fullname: Gabriel Destiny
:forename_initials: G.
:organization: Divination Inc.
:email: gabriel.destiny@ribose.com
:street: 9288 N Divine Street
:city: Dunn
:code: 28334
:region: NC
:country: United States of America
:lastname_2: Luck
:fullname_2: Charise Luck
:forename_initials_2: C.
:organization_2: Divination Inc.
:email_2: charise.luck@ribose.com
:street_2: 9288 N Divine Street
:city_2: Dunn
:code_2: 28334
:region_2: NC
:country_2: United States of America

[.comment]
tag::sample[]
// tag::sample[]

[abstract]

This document describes a JSON HTTP API for online services that
provide calendar-based fortune heuristics.

== Introduction

Fortune-telling, the practice of predicting information about a
person's life, is an activity practiced throughout history.

While there are myriad forms of fortune telling methodologies, this
document applies to a particular form of service that provides fortune
heuristics, commonly known as "luck", for a particular subject based
on a calendar-based input.

Since HTTP RFC7230 status codes are insufficient to convey
information about fortune heuristics, this specification defines a
simple JSON RFC8259 document format for this purpose. The
response can be used by HTTP APIs to deliver results to non-human
clients or to an end-user.


== Conventions Used in This Document

The key words "*MUST*", "*MUST NOT*", "*REQUIRED*", "*SHALL*",
"*SHALL NOT*", "*SHOULD*", "*SHOULD NOT*", "*RECOMMENDED*",
"*NOT RECOMMENDED*", "*MAY*", and "*OPTIONAL*" in this document
are to be interpreted as described in BCP 14 RFC2119 RFC8174
when, and only when, they appear in all capitals, as shown here.

The following definitions apply in this document:

Well-known URI:: This specification makes use of the "well-known URI"
feature of HTTP servers RFC5785 to provide a bootstrapping URI for
the client usage of fortune heuristics services.

Root of Fortune:: The service discovery endpoint that provides a URI
list of available fortune heuristic endpoints available, in accordance
with service-discovery.

== Fortune Heuristics Service Well-Known URI

A well-known URI called "fortune" is registered by this specification
for fortune heuristics services (see iana).

Services complying with this document *SHOULD* have its well-known
URI pointing (directly or through redirection) to the Root of Fortune.

The Root of Fortune can be used by the client for service discovery,
namely, the available calendar-based fortune heuristics services
available on the server, as specified in service-discovery.

=== Well-Known URI Redirection

Servers *MUST* redirect HTTP requests for that resource to the
actual "context path" using one of the available mechanisms provided
by HTTP RFC7230 (e.g., using a 301, 303, or 307 response).

Clients *MUST* handle HTTP redirects on the well-known URI.


=== Well-Known URI Cache Behavior

Servers *SHOULD* set an appropriate Cache-Control header value (as
according to RFC7234,5.2 of) in the redirect response to set
caching behavior as required by the type of response generated.


== New HTTP Methods: SEEK and DIVINE

This specification defines two new HTTP methods: "SEEK" and "DIVINE"
methods for HTTP RFC7230.

While HTTP GET requests are treated equivalently as the "SEEK" and
"DIVINE" requests, its usage is discouraged and therefore *SHOULD NOT*
be used.

Usage of these methods are defined in the sections below.


== Defined Data Types: Date-Time Formats

This specification defines a number of date-time formats as according
to the conventions of RFC3339 for the unambiguous communication
between client and server.

The types defined are as follows.

`DATETIME`::
  As described in RFC3339,5.6 of, with the addition that reduced
  accuracy representations described in ISO.8601-1.2018 are
  supported.  Reduced accuracy date and times are accepted where a
  date or time component (2-digits long) is replaced by "--".
+
For example, the date time "2018-04---T01:02:00Z" represents the UTC
time of 1:02am, on an unknown day within April of the year 2018.

`DATE`::
  As described in "DATETIME", but the "time" component will not be
  taken into account in the algorithm.


[#service-discovery]
== Fortune Heuristics Service Discovery

[#root-of-fortune]
=== Root of Fortune Path URI ("/")

The Root of Fortune URI, defined as "/" in this document, is used for
service discovery on types of calendar-based fortune heuristics
available.

An empty SEEK request with the "application/json" request type
*MUST* be sent to this endpoint to retrieve the available endpoints.
All other HTTP methods *MUST NOT* be supported at this URI.

An example of such a response is as follows:

[source,json]
----
HTTP/1.1 200 Success
Content-Type: application/json
Content-Language: en

{
  "diviners" : [
    "/astrology",
    "/bazi",
  ]
}
----

A service discovery object *MUST* have the following members:

`diviners`::
  (JSON array)
  An array that contains endpoints that conform to this specification.
  All endpoints listed here are relative to the Root of Fortune path.
  For example, the path "/astrology" listed in the example has an
  endpoint path of "[root-of-fortune]/astrology", where
  "[root-of-fortune]" indicates the real path of the Root of Fortune.


// end::sample[]
[.comment]
end::sample[]


[#service-endpoint]
== Fortune Heuristics Service Endpoint

An endpoint offering fortune heuristics services *MUST* adhere to
specifications in this section.

A service *MAY* implement multiple divination services based on
different divination methods, such as the digital oracle shown
in digital-oracle.


[[digital-oracle]]
.Dimensional Eye, a digital oracle that communicates through one button
====
[alt=An incarnation of the Dimensional Eye, in ASCII]
....
                                  __
                             __===^-\
                        __===       -\
                    __===-           -\
               __===-                 -\
         ___===-                       -\
      ===-               ---__          -\
      \\\              |||^^\ \__        -\
       \\\             |||       \__      -\
        \\\            |||    ______\_     -\
         \\\           |||  _/-******\\__   -\
          \\\          ||  /-****_****-\ \_  -\
           \\\         || |-***/   \***-\  \_ -\
            \\\        || |-***\___/***-|    \ -\
             \\\       ||  \-*********-/  __--/ -\
              \\\      ||    \-******/__--       -\
               \\\     ||        __--             -\
                \\\    ||    __--                  -\
                 \\\   ||__--                       -\
                  \\\                                -\
                   \\\                                -\
                    \\\                                -\
                     \\\                                -\
                      \\\                  __            -\
                       \\\               //##\\           -\
                        \\\              \\##//            -\
                         \\\               ^^          __--==^
                          \\\                    __--===
                           \\\             __--===
                            \\\      __--===
                             \\\ __--==
                              \\=

....
====

[#endpoint-specification-request]
=== Service Specification Request

To retrieve capabilities and parameters of an endpoint complying with
this specification, a service specification JSON object is returned.

An empty SEEK request with the "application/json" request type
*MUST* be sent to this endpoint to retrieve the service
specification that describes parameters accepted by this endpoint.

Two examples of such a response are given below.

[source,json]
----
HTTP/1.1 200 Success
Content-Type: application/json
Content-Language: en

{
  "description": "Gaze into your upcoming luck!",
  "details": "https://divine.example.com/manual/astrology-api",
  "parameters": {
    "birthday": {
      "type": "DATE",
      "description": "Your birth date in UTC"
    },
    "targetDateBegin": {
      "type": "DATE",
      "description": "Start of the target date range to report on"
    },
    "targetDateEnd": {
      "type": "DATE",
      "description": "End of the target date range to report on"
    },
    "interval": {
      "values": {
        "D": "Daily",
        "M": "Monthly",
        "Y": "Yearly"
      },
      "description": "Available intervals to report on."
    }
  }
}
----

[source,json]
----
HTTP/1.1 200 Success
Content-Type: application/json
Content-Language: en

{
  "description": "Matches and mis-matches according to the "
    "Yin Yang and Five Elements techniques",
  "details": "https://divine.example.com/manual/bazi-api",
  "parameters": {
    "birthday": {
      "type": "DATETIME",
      "description": "Your birth date and time in UTC"
    },
    "targetDateBegin": {
      "type": "DATETIME",
      "description": "Start of the target date/time range to report on"
    },
    "targetDateEnd": {
      "type": "DATETIME",
      "description": "End of the target date/time range to report on"
    },
    "interval": {
      "values": {
        "H": "Hourly",
        "D": "Daily",
        "M": "Monthly",
        "Y": "Yearly"
      },
      "description": "Available intervals to report on."
    }
  }
}
----

[#service-endpoint-specification]
=== Service Specification Object

A service specification object *MUST* contain the following members.

`description`::
  (string) A short, human-readable summary of the fortune heuristic
  service at this endpoint. This *SHOULD* be a stable reference.

`details`::
  (URI, optional) A URI reference that provides further details for
  human consumption, such as API documentation that includes details of
  parameters accepted or response states.

`parameters`::
  (object, mandatory) An object that specifies what parameters
  are accepted by this endpoint. Each parameter key within this object
  specifies an accepted parameter name, and its value is a parameter
  specification object, which is described below.

A parameter specification object *SHOULD* contain the following
members:

`type`::
  (string, optional) The value type accepted by this parameter. Value
  types are described in this document. This member is mutually
  exclusive with `values`.

`description`::
  (string, mandatory) The purpose of this parameter.

`values`::
  (object, optional) The accepted values of this parameter, unlisted
  values *SHOULD* not be accepted by the parameter. Each key within
  this object specifies an accepted value, and its value provides a
  description of the purpose of the value.


[#endpoint-report]
== Fortune Heuristics Report Request and Response

[#endpoint-report-request]
=== Fortune Heuristics Report Request

A request using the HTTP "DIVINE" method and the "application/json"
type *MUST* be sent to the fortune heuristic endpoint to retrieve
results for a fortune heuristic query.

The request made *MUST* conform to the specifications of the
endpoint, as retrieved via the "SEEK" method described in
endpoint-specification-request.

An example of a request is provided below.

[source]
----
URI: /divination/astrology
Method: DIVINE
Content-Type: application/json
Content-Language: en

{
  "birthday": "1976-02-11T00:00:00Z",
  "targetDateBegin": "2018-01-01T00:00:00Z",
  "targetDateEnd": "2019-01-01T00:00:00Z",
  "interval": "M"
}
----


[#endpoint-report-response]
=== Fortune Heuristics Report Response

A fortune heuristic query using the "DIVINE" method triggers a
response that contains a fortune heuristics report.

A successful response returns a JSON object that *MUST* conform
to the object structure described in this section.

A report object *SHOULD* contain the following members:

`type`::
  (URI, mandatory) A URI that defines the type of the report located
  at the `report` key of this object.

`report`::
  (object, mandatory) An object that contains two keys, `intervals`
  and `events`. The `intervals` object contains an array of interval
  objects that matches the demanded intervals in the request within
  the target date range.
  The `events` object contains an array of significant event objects
  within the target date range.

An example of a response is provided below.

[source]
----
URI: /divination/astrology
Method: DIVINE
HTTP/1.1 200 Success
Content-Type: application/json
Content-Language: en

{
  "type": "https://association-of.astrology/reports/monthly",
  "report": {
    "intervals": [
      {
        "dateStart": "2018-01-01T00:00:00Z",
        "dateEnd": "2018-02-01T00:00:00Z",
        "categories": [
          {
            "category":
              "https://divine.example.com/astrology/categories/health"
            "value": 80,
            "description": "Charge ahead with excellent health."
          },
          {
            "category":
              "https://divine.example.com/astrology/categories/love"
            "value": 70,
            "description":
              "Give a certain person or situation another try!"
          },
          {
            "category":
              "https://divine.example.com/astrology/categories/finance"
            "value": 5,
            "description": "You've just realized that you don't have
              any cash on hand."
          }
        ]
      },
      {
        "dateStart": "2018-02-01T00:00:00Z",
        "dateEnd": "2018-03-01T00:00:00Z",
        "..."
      },
      "..."
    ],
    "events": [
      {
        "dateStart": "2018-01-15T03:20:00",
        "dateEnd": "2018-01-16T20:22:15",
        "description": "The planet of growth and good luck, Jupiter
          will make a harmonious connection with power planet Pluto,
          helping you connect with influential people",
        "recommendation": "Engage in networking during this time."
      },
      {
        "dateStart": "2018-03-22T00:12:40",
        "dateEnd": "2018-03-28T02:45:03",
        "description": "Communication planet Mercury enters your sign,
          which will find you in a busier and chattier mood.",
        "recommendation":
          "Take charge of work with your newfound energy."
      }
      "..."
    ]
  }
}
----


Fortune heuristic reports are created by a divination output that
*MAY* requires quantitative interpretation. A sample representation of
interpreting a graphical divination output is provided in
divination-message.

[[divination-message]]
.Forty-nine yarrow sticks reveals a mystical message on fortune
====
[alt=A mystical pattern in ASCII]
....
                                    0000000000000000000000000
        0000000000000000000000001 G 1000000000000000000000000
        0000000000000000000000011 R 1100000000000000000000000
        0000000000000000000000111 A 1110000000000000000000000
        0000000000000000000001111 C 1111000000000000000000000
        0000000000000000000011111 E 1111100000000000000000000
        0000000000000000000111111 , 1111110000000000000000000
        0000000000000000001111111   1111111000000000000000000
        0000000011111111111111111 M 1111111111111111100000000
        0000000111111111111111111 E 1111111111111111110000000
        0000001111111111111111111 R 1111111111111111111000000
        0000011111111111111111111 C 1111111111111111111100000
        0000111111111111111111111 Y 1111111111111111111110000
        0001111111111111111111111 , 1111111111111111111111000
        0011111111111111111111111   1111111111111111111111100
        0111111111111111111111111 A 1111111111111111111111110
        0000000000000000011111111 N 1111111100000000000000000
        0000000000000000111111111 D 1111111110000000000000000
        0000000000000001111111111   1111111111000000000000000
        0000000000000011111111111 P 1111111111100000000000000
        0000000000000111111111111 E 1111111111110000000000000
        0000000000001111111111111 A 1111111111111000000000000
        0000000000011111111111111 C 1111111111111100000000000
        0000000000111111111111111 E 1111111111111110000000000
        0000000001111111111111111 . 1111111111111111000000000
....
====



[#endpoint-report-interval-obj]
=== Report Interval Object

The `intervals` value of a report object contains a number of report
intervals -- each representing a non-overlapping period of the
selected interval length. When all of these intervals are put
together, the combined period *MUST* fully cover the requested
report target period.

An example interval object is shown below.

[source,json]
----
{
  "dateStart": "2018-01-01T00:00:00Z",
  "dateEnd": "2018-02-01T00:00:00Z",
  "categories": [
    {
      "category":
        "https://divine.example.com/astrology/categories/health"
      "value": 80,
      "description": "Charge ahead with your excellent health."
    },
    {
      "category":
        "https://divine.example.com/astrology/categories/love"
      "value": 70,
      "description": "Give a certain person or situation another try!"
    },
    {
      "category":
        "https://divine.example.com/astrology/categories/finance"
      "value": 5,
      "description": "You've just realized that you don't have
        any cash on hand."
    }
  ]
}
----

An interval object *MUST* contain the following members:

`dateStart`::
  (datetime, mandatory) This value specifies the start of the period
  which this interval object applies to.

`dateEnd`::
  (datetime, mandatory) This value specifies the end of the period
  which this interval object applies to.

In the given example, the `categories` key is an implementation
specific object that details heuristic results returned by the
selected algorithm. This *MAY* differ in different algorithms.


[#endpoint-report-event-obj]
=== Report Events Object

The `events` value of a report object contains a number of event
objects. Each event object represents an event relevant to the
calculation of fortune heuristics during a target report period. These
events *MAY* be of variable time lengths, and *MAY* be overlapping
amongst each other.

The following example demonstrates two event objects the service
determines relevant to a user's query.

[source,json]
----
{
  "dateStart": "2018-01-15T03:20:00",
  "dateEnd": "2018-01-16T20:22:15",
  "description": "The planet of growth and good luck, Jupiter will
    make a harmonious connection with power planet Pluto, helping you
    connect with influential people",
  "recommendation": "Engage in networking during this time."
},
{
  "dateStart": "2018-03-22T00:12:40",
  "dateEnd": "2018-03-28T02:45:03",
  "description": "Communication planet Mercury enters your sign,
    which will find you in a busier and chattier mood.",
  "recommendation": "Take charge of work with your newfound energy."
}
----

Similar to an interval object, an event object *MUST* contain the
following members:

`dateStart`::
  (datetime, mandatory) This value specifies the start of the period
  described by the event.

`dateEnd`::
  (datetime, mandatory) This value specifies the end of the period
  described by the event.

In the given example, the keys `description` and `recommendation`
are implementation-specific details. This *MAY* differ in different
algorithms.


[#endpoint-report-errors]
=== Report Generation Errors

This specification makes use of normal HTTP error codes with the
following extensions.

Errors *MUST* be returned using the Problem JSON Structure as
accordance with RFC7807.

422 Unprocessable Entity::
  For example, a malformed date-time parameter, or an illogical input,
  such as when the subject's birthday occurs after the report target
  date period.

473 Beyond Existing Capability::
  The service determines that the outcome is too difficult to predict.
  For example, in the case where the calculation is too complex to
  complete in a certain time period. The service *SHOULD* issue this
  response code to indicate that the client should not try the same
  request again.

474 Outcome Impossible::
  The service determines that the outcome is impossible. For example,
  when the algorithm determines that the subject will have deceased
  before the start of the requested target period.



[#security]
== Security Considerations

* TLS RFC5246 and authenticated HTTP requests should be used to
protect the DIVINE request and responses due to the personal nature
of information transmitted.

* A client *SHOULD* verify the identity of the server on every
request to prevent impersonation or man-in-the-middle attacks, as data
transmitted to and from the server is sensitive information, and at
times critical information to the user.

* Synchronization of client and server time *MUST* be
well-considered in the implementation of this specification. A
mismatch of client and server time *MAY* lead to algorithm
miscalculations that can cause mistaken choices of a user that depends
on the reliability of this system.



[#iana]
== IANA Considerations

=== Well-Known URI Registrations

This document defines a well-known URI using the registration
procedure and template from RFC5785,5.1 of.

==== "fortune" Well-Known URI Registration

URI suffix::  fortune

Change controller::  IETF

Specification document(s)::  This document

Related information::  N/A.


[.comment]
tag::sample[]
// begin::sample[]

[bibliography]
== Normative References

++++

reference anchor='RFC2119'
  target='https://www.rfc-editor.org/info/rfc2119'
  front
    titleKey words for use in RFCs to Indicate Requirement
      Levels/title
    author initials='S.' surname='Bradner' fullname='S. Bradner'
      organization /
    /author
    date year='1997' month='March' /
    abstracttIn many standards track documents several words are
        used to signify the requirements in the specification.  These
        words are often capitalized. This document defines these words
        as they should be interpreted in IETF documents.  This
        document specifies an Internet Best Current Practices for the
        Internet Community, and requests discussion and suggestions
        for improvements./t/abstract
  /front
  seriesInfo name='BCP' value='14'/
  seriesInfo name='RFC' value='2119'/
  seriesInfo name='DOI' value='10.17487/RFC2119'/
/reference

reference anchor='RFC5785'
  target='https://www.rfc-editor.org/info/rfc5785'
  front
    titleDefining Well-Known Uniform Resource Identifiers
      (URIs)/title
    author initials='M.' surname='Nottingham'
      fullname='M. Nottingham'
      organization /
    /author
    author initials='E.' surname='Hammer-Lahav'
      fullname='E. Hammer-Lahav'
      organization /
    /author
    date year='2010' month='April' /
    abstracttThis memo defines a path prefix for #x22;well-known
        locations#x22;, #x22;/.well-known/#x22;, in selected Uniform
        Resource Identifier (URI) schemes.
        [STANDARDS-TRACK]/t/abstract
  /front
  seriesInfo name='RFC' value='5785'/
  seriesInfo name='DOI' value='10.17487/RFC5785'/
/reference

reference anchor='RFC7230'
  target='https://www.rfc-editor.org/info/rfc7230'
  front
    titleHypertext Transfer Protocol (HTTP/1.1): Message Syntax and
      Routing/title
    author initials='R.' surname='Fielding' fullname='R. Fielding'
      role='editor'
      organization /
    /author
    author initials='J.' surname='Reschke' fullname='J. Reschke'
      role='editor'
      organization /
    /author
    date year='2014' month='June' /
    abstracttThe Hypertext Transfer Protocol (HTTP) is a stateless
        application-level protocol for distributed, collaborative,
        hypertext information systems.  This document provides an
        overview of HTTP architecture and its associated terminology,
        defines the #x22;http#x22; and #x22;https#x22; Uniform
        Resource Identifier (URI) schemes, defines the HTTP/1.1
        message syntax and parsing requirements, and describes related
        security concerns for implementations./t/abstract
  /front
  seriesInfo name='RFC' value='7230'/
  seriesInfo name='DOI' value='10.17487/RFC7230'/
/reference

reference anchor='RFC7234'
  target='https://www.rfc-editor.org/info/rfc7234'
  front
    titleHypertext Transfer Protocol (HTTP/1.1): Caching/title
    author initials='R.' surname='Fielding' fullname='R. Fielding'
      role='editor'
      organization /
    /author
    author initials='M.' surname='Nottingham' fullname='M. Nottingham'
      role='editor'
      organization /
    /author
    author initials='J.' surname='Reschke' fullname='J. Reschke'
      role='editor'
      organization /
    /author
    date year='2014' month='June' /
    abstracttThe Hypertext Transfer Protocol (HTTP) is a stateless
        \%application- level protocol for distributed, collaborative,
        hypertext information systems.  This document defines HTTP
        caches and the associated header fields that control cache
        behavior or indicate cacheable response
        messages./t/abstract
  /front
  seriesInfo name='RFC' value='7234'/
  seriesInfo name='DOI' value='10.17487/RFC7234'/
/reference

reference anchor='RFC7807'
  target='https://www.rfc-editor.org/info/rfc7807'
  front
    titleProblem Details for HTTP APIs/title
    author initials='M.' surname='Nottingham'
      fullname='M. Nottingham'
      organization /
    /author
    author initials='E.' surname='Wilde' fullname='E. Wilde'
      organization /
    /author
    date year='2016' month='March' /
    abstracttThis document defines a #x22;problem detail#x22;
        as a way to carry machine- readable details of errors in a
        HTTP response to avoid the need to define new error response
        formats for HTTP APIs./t/abstract
  /front
  seriesInfo name='RFC' value='7807'/
  seriesInfo name='DOI' value='10.17487/RFC7807'/
/reference

reference anchor='RFC8174'
  target='https://www.rfc-editor.org/info/rfc8174'
  front
    titleAmbiguity of Uppercase vs Lowercase in RFC 2119 Key
      Words/title
    author initials='B.' surname='Leiba' fullname='B. Leiba'
      organization /
    /author
    date year='2017' month='May' /
    abstracttRFC 2119 specifies common key words that may be used
        in protocol specifications.  This document aims to reduce
        the ambiguity by clarifying that only UPPERCASE usage of the
        key words have the defined special meanings./t/abstract
  /front
  seriesInfo name='BCP' value='14'/
  seriesInfo name='RFC' value='8174'/
  seriesInfo name='DOI' value='10.17487/RFC8174'/
/reference

reference anchor='RFC8259'
  target='https://www.rfc-editor.org/info/rfc8259'
  front
    titleThe JavaScript Object Notation (JSON) Data Interchange
      Format/title
    author initials='T.' surname='Bray' fullname='T. Bray'
      role='editor'
      organization /
    /author
    date year='2017' month='December' /
    abstracttJavaScript Object Notation (JSON) is a lightweight,
        text-based, language-independent data interchange format.
        It was derived from the ECMAScript Programming Language
        Standard.  JSON defines a small set of formatting rules for
        the portable representation of structured data./t
      tThis document removes inconsistencies with other
        specifications of JSON, repairs specification errors, and
        offers experience-based interoperability
        guidance./t
    /abstract
  /front
  seriesInfo name='STD' value='90'/
  seriesInfo name='RFC' value='8259'/
  seriesInfo name='DOI' value='10.17487/RFC8259'/
/reference
++++

[bibliography]
== Informative References

++++

reference anchor='ISO.8601-1.2018'
  target='https://www.iso.org/en/standard/70907.html'
  front
    titleISO/DIS 8601-1:2018, Data elements and interchange
      formats -- Information interchange -- Representation of dates
      and times -- Part 1: Basic rules/title
    author
      organizationISO/IEC/organization
      address
        urihttp://www.iso.org/uri
      /address
    /author
    date month='January' year='2018'/
    abstractt/t/abstract
  /front
/reference


reference anchor='RFC3339'
  target='https://www.rfc-editor.org/info/rfc3339'
  front
    titleDate and Time on the Internet: Timestamps/title
    author initials='G.' surname='Klyne' fullname='G. Klyne'
      organization /
    /author
    author initials='C.' surname='Newman' fullname='C. Newman'
      organization /
    /author
    date year='2002' month='July' /
  /front
  seriesInfo name='RFC' value='3339'/
  seriesInfo name='DOI' value='10.17487/RFC3339'/
/reference

reference anchor='RFC5246'
  target='https://www.rfc-editor.org/info/rfc5246'
  front
    titleThe Transport Layer Security (TLS) Protocol
      Version 1.2/title
    author initials='T.' surname='Dierks' fullname='T. Dierks'
      organization /
    /author
    author initials='E.' surname='Rescorla' fullname='E. Rescorla'
      organization /
    /author
    date year='2008' month='August' /
    abstracttThis document specifies Version 1.2 of the Transport
        Layer Security (TLS) protocol.  The TLS protocol provides
        communications security over the Internet.  The protocol
        allows client/server applications to communicate in a way
        that is designed to prevent eavesdropping, tampering, or
        message forgery.  [STANDARDS-TRACK]/t/abstract
  /front
  seriesInfo name='RFC' value='5246'/
  seriesInfo name='DOI' value='10.17487/RFC5246'/
/reference
++++



[appendix]
== Acknowledgements

The authors thank the following individuals for their valuable
feedback on this specification, and commend them for making fortune
heuristics more accessible for the benefit of mankind.

// end::sample[]
[.comment]
end::sample[]
CODE ENDS]]></sourcecode>

</section>

<section anchor="example-3-xml3"><name>Rendered as RFC XML v3</name>

<sourcecode anchor="_65ec5f0a-36fb-cd72-cf18-bbf0182b491b" type="xml"><![CDATA[CODE BEGINS
Unresolved directive in sections/97-examples.adoc - include::../examples/rfc-divination-cfapi/xml3/draft-divination-cfapi.xml[]
CODE ENDS]]></sourcecode>

</section>
</section>
</section>
  </back>
</rfc>
